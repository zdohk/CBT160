         TITLE 'FREEALL - FREE ALLOCATED FILES WITH SVC99'
*%A PPLINK NOTEST                                                  JRB
*L ALIAS FA                                                        JRB
*L NAME  FREEALL(R)                                                JRB
*                                                                  JRB
**********************************************************************
***                                                                ***
***                   FREEALL COMMAND                              ***
***                                                                ***
***  THIS COMMAND IS A NEW VERSION OF FREEALL WHICH UTILIZES SVC99 ***
***  TO UNALLOCATE FILES.  THIS VERSION HAS THE ADVANTAGE OF USING ***
***  ALL IBM SUPPORTED CODE.  SVC99 DOES ALL THE DEALING WITH THE  ***
***  TIOT, ETC., SO THAT THIS PROGRAM CAN BE MAINTAINED BY MORE    ***
***  JUNIOR SYSTEMS PROGRAMMERS.  THIS VERSION ALSO ALLOWS THE     ***
***  DESIGNATION OF MASKS FOR INSTALLATION EXCEPTED DDNAMES,       ***
***  INSTEAD OF JUST EXPLICIT NAMES.                               ***
***                                                                ***
***  THE USER IS ABLE TO SUPPLY A LIST OF DDNAMES AND/OR MASKS TO  ***
***  BE EXCEPTED FROM THE UNALLOCATION PROCESS.  THE USER CAN ALSO ***
***  CHOOSE WHETHER TO UNALLOCATE CONCATENATIONS, AND WHETHER TO   ***
***  UNALLOCATE DATASETS NOT DYNAMICALLY ALLOCATED (USEFUL WHEN    ***
***  RUNNING TSO IN BATCH, OR WHEN YOU NEED TO FREE DATASETS       ***
***  ALLOCATED DURING LOGON).  THE USER CAN ALSO SEE A LIST OF THE ***
***  DEFAULT INSTALLATION MASKS/DDNAMES WHICH WILL ALWAYS BE       ***
***  EXCEPTED FROM THE UNALLOCATIONS.  (SEE THE HELP DOCUMENT FOR  ***
***  INSTRUCTIONS ON HOW TO CONSTRUCT DDNAME MASKS.  INSTALLATION  ***
***  MASKS ARE DEFINED WITH MACRO 'EXNAM'.)                     TS05204
***                                                                ***
***  THE TEMP (ALIAS SCRATCH), DUMMY, SYSOUT AND TERM OPERANDS  TS05203
***  HAVE BEEN ADDED TO THIS VERSION TO MAKE IT COMPATABLE WITH TS05203
***  THE J/TIP PRODUCT.                                         TS05203
***                                                             TS05203
***                                                                ***
***  SYNTAX:                                                       ***
***                                                                ***
***  FREEALL  EXCEPT(MASK1,MASK2,...)                           TS05203
***           ONLY(PREFIX)                                         JRB
***           SYSMASKS                                          TS05203
***           NOLIST | LIST                                     TS05203
***           CONCATS | NOCONCATS                               TS05203
***           DYNAM | ALL | NOEXCEPTIONS                 TS05203   JRB
***           TEMP | NOTEMP  (OR  SCRATCH | NOSCRATCH)          TS05203
***           DUMMY | NODUMMY                                   TS05203
***           SYSOUT | NOSYSOUT                                 TS05203
***           TERM | NOTERM                                     TS05203
***                                                                ***
***                                                                ***
***  ALIAS: FA                                                     ***
***                                                                ***
***  REQUIRED OPERANDS:  NONE                                      ***
***   DEFAULT OPERANDS:  NOLIST,CONCATS,DYNAM,TEMP,             TS05203
***                      DUMMY,SYSOUT,TERM                      TS05203
***                                                                ***
*************************************************************** TS05203
         EJECT                                                  TS05203
*************************************************************** TS05203
***                                                                ***
***  NON-IBM MACROS:  (ALL FROM CBT MODS TAPE, SAME AUTHOR)        ***
***    LINKSAVE - LINKAGE CONVENTIONS IN                           ***
***    LINKBACK - LINKAGE CONVENTIONS BACK                         ***
***    GTEDADAT - CREATE SVC99 AND DAIRFAIL CONTROL BLOCKS         ***
***    GTEDASET - LINK SVC99 AND DAIRFAIL CONTROL BLOCKS TOGETHER  ***
***    GTEDAALC - EXECUTE SVC99 AND DAIRFAIL                       ***
***                                                                ***
***                                                                ***
***  ASM OPTIONS:   RENT                                           ***
***  LKED OPTIONS:  RENT REUS REFR                                 ***
***                                                                ***
***                                                                ***
***  RECOMMENDED LIBRARY:                                          ***
***        (1)  LPALIB                                             ***
***        (2)  LINKLIB                                            ***
***        (3)  CMDLIB                                             ***
***                                                                ***
**********************************************************************
         EJECT 6                                                TS05203
**********************************************************************
***                                                                ***
***  AUTHOR:                                                       ***
***     CHUCK HOFFMAN, CONSULTANT                                  ***
***     USER SERVICES CENTER                                       ***
***     BUREAU OF SYSTEMS OPERATIONS (BSO)                         ***
***     OFFICE OF MANAGEMENT INFORMATION SYSTEMS (OMIS)            ***
***     EXECUTIVE OFFICE FOR ADMINISTRATION AND FINANCE (A&F)      ***
***     COMMONWEALTH OF MASSACHUSETTS                              ***
***     ONE ASHBURTON PLACE, ROOM 1619                             ***
***     BOSTON, MA  02108                                          ***
***                                 (617) 727-5725  WORK           ***
***                                 (617) 769-8547  HOME           ***
***  ALIAS:                                                     TS05203
***     CHUCK HOFFMAN, SYSTEMS PROGRAMMER                       TS05203
***     GTE LABORATORIES, INC.                                  TS05203
***     TECHNICAL COMPUTATION CENTER                            TS05203
***     40 SYLVAN ROAD                                          TS05203
***     WALTHAM, MA  02254                                      TS05203
***                                 (617) 466-2131              TS05203
***                                                                ***
***  MODIFIED SEPTEMBER 1998:                                      JRB
***     JEFFREY R. BROIDO                                          JRB
***     broidoj@gmail.com                                          JRB
***                                                                JRB
**********************************************************************
         EJECT
**********************************************************************
***                                                                ***
***  REGISTER USAGE:                                               ***
***                                                                ***
***     R0-R3  LINKAGE CONVENTIONS, MACROS, WORK                   ***
***     R4-R6  WORK                                                ***
***     R7-R8  (UNUSED)                                            ***
***        R9  BASE OF IKJPARMD DSECT                              ***
***       R10  BAL REGISTER                                        ***
***       R11  (UNUSED)                                            ***
***       R12  BASE OF PROGRAM                                     ***
***       R13  LINKAGE CONVENTIONS, BASE OF WORKD DSECT            ***
***   R14-R15  LINKAGE CONVENTIONS, WORK                           ***
***                                                                ***
*************************************************************** TS05203
         SPACE 3                                                TS05203
*************************************************************** TS05203
***                                                                ***
***  MAINTENANCE HISTORY:                                          ***
***                                                             TS05201
***  1.  ADD FT05F001 AND FT06F001 TO SYSTEM MASKS.             TS05201
***                                                             TS05201
***  2.  A.  ADD TEMP|NOTEMP (SCRATCH|NOSCRATCH), TERM|NOTERM,  TS05203
***          SYSOUT|NOSYSOUT, DUMMY|NODUMMY OPERANDS FOR        TS05203
***          COMPATABILITY WITH J/TIP.  (J/TIP 'SCHEDULE'       TS05203
***          COMMAND USES A HARDCODED CALL TO 'FREEALL' WITH    TS05203
***          THESE OPERANDS.)                                   TS05203
***                                                             TS05203
***      B.  ADD NOTATION ON OUTPUT OF WHETHER THE FILE IS      TS05203
***          A DATASET, CONCATENATION, TERMINAL, TEMP,          TS05203
***          SYSOUT OR DUMMY FILE.  REMOVE THE 'CONCATENATION'  TS05203
***          FOOTNOTE PROCESSING.                               TS05203
***                                                             TS05203
***      C.  SHOW EXPANSION OF TEXT UNITS FOR DYNAMIC           TS05203
***          ALLOCATION.                                        TS05203
***                                                             TS05203
***      D.  VARIOUS PAGE EJECTS, ETC., TO MAKE THE LISTING     TS05203
***          EASIER TO READ.                                    TS05203
***                                                             TS05203
***  3.  ADD MACROS EXNAM AND EXTBL TO MAKE IT EASIER TO DEFINE TS05204
***      INSTALLATION-EXCEPTED MASKS.                           TS05204
***                                                             TS05204
***  4.  PANVALET REMOVED FROM SYSTEM MASKS.                       JRB
***                                                                JRB
***  5.  PSEUDO STEPLIB, IPCS, SMP TABLE, STEPLIB AND PSEUDO-      JRB
***      STEPLIB, SYSEXEC, SYSLBC AND SYSUADS ADDED TO SYSTEM      JRB
***      MASKS.                                                    JRB
***                                                                JRB
***  6.  "NOEXCEPTIONS" PARM ADDED.                                JRB
***                                                                JRB
***  7.  "ONLY" PARM ADDED.                                        JRB
***                                                                ***
**********************************************************************
         EJECT                                                  TS05204
*************************************************************** TS05204
***                                                         *** TS05204
***   LOCAL MACROS                                          *** TS05204
***                                                         *** TS05204
*************************************************************** TS05204
*                                                               TS05204
         TITLE 'FREEALL - LOCAL MACROS'
         MACRO
&NAME    EQ$R
         LCLA  &I
&I       SETA  0
.LUP     ANOP
R&I      EQU   &I
&I       SETA  &I+1
         AIF   (&I LE 15).LUP
         MEND
         MACRO
&CSNAME  LINKSAVE &BASE=,&GETMAIN=NO,&GETAMT=136
.*********************************************************************
.*  MACRO FOR STANDARD LINKAGE CONVENTIONS AT PROGRAM ENTRY.       ***
.*  USED IN CONJUNCTION WITH THE LINKBACK MACRO.                   ***
.*                                                                 ***
.*  BASE=NN     REGISTER NUMBER OF BASE REGISTER.                  ***
.*                                                                 ***
.*  GETMAIN=YES WILL DO A GETMAIN FOR STORAGE SPACE.  THIS         ***
.*              STORAGE WILL BE POINTED TO BY R13, AND WILL BE     ***
.*              FREED AUTOMATICALLY BY THE LINKBACK MACRO.         ***
.*                                                                 ***
.*  GETAMT=NNNN (VALID ONLY IF GETMAIN=YES) DEFAULT AMOUNT OF      ***
.*              SPACE OBTAINED WILL BE 72 BYTES FOR SAVE AREA,     ***
.*              PLUS 64 BYTES FOR PROGRAMMER'S USE.  R13 WILL BE   ***
.*              THE BASE ADDRESS OF THE STORAGE AREA.  THIS        ***
.*              AMOUNT WILL BE FREED BY THE LINKBACK MACRO.        ***
.*                                                                 ***
.*  CHUCK HOFFMAN, SYSTEMS PROGRAMMING, GTEL COMPUTING CENTER      ***
.*********************************************************************
         GBLC  &GMN,&GAMT
         LCLA  &C,&D
&GAMT    SETC  '&GETAMT'
&GMN     SETC  '&GETMAIN'
         AIF   ('&GMN' EQ 'YES').FORM2
&CSNAME  CSECT
&C       SETA  K'&CSNAME
&D       SETA  ((20+&C)/2)*2
         B     &D.(0,15)                BRANCH AROUND ID
         DC    AL1(&C)                    LENGTH
         DC    CL&C'&CSNAME'              ID
         DC    CL8'&SYSDATE'              SYSTEM DATE:  MM/DD/YY
         DC    CL6' &SYSTIME'             SYSTEM TIME:  HH.MM
         STM   14,12,12(13)             SAVE R0-R12, R14-R15
         LR    &BASE,15                 LOAD BASE ADDRESS
         USING &CSNAME,&BASE            ASSIGN BASE REGISTER
         ST    13,MYSV&SYSNDX+4         STORE ADDR OF PREV SAVE AREA
*                                         INTO MY SAVE AREA
         LA    14,MYSV&SYSNDX           LOAD ADDR OF MY SAVE AREA
         ST    14,8(0,13)                 STORE IT INTO PREV SAVE AREA
         LR    13,14                      ALSO LOAD IT INTO R13
         B     MYSV&SYSNDX+72           BRANCH AROUND MY SAVE AREA
MYSV&SYSNDX DC 18F'0'                   MY SAVE AREA
         MEXIT
.FORM2   ANOP
&CSNAME  CSECT
&C       SETA  K'&CSNAME
&D       SETA  ((20+&C)/2)*2
         B     &D.(0,15)                BRANCH AROUND ID
         DC    AL1(&C)                    LENGTH
         DC    CL&C'&CSNAME'              ID
         DC    CL8'&SYSDATE'              SYSTEM DATE:  MM/DD/YY
         DC    CL6' &SYSTIME'             SYSTEM TIME:  HH.MM
         STM   14,12,12(13)             SAVE R0-R12, R14-R15
         LR    &BASE,15                 LOAD BASE ADDRESS
         USING &CSNAME,&BASE            ASSIGN BASE REGISTER
*        GETMAIN R,LV=&GETAMT           GET STORAGE FOR S.A. + WORK
         GETMAIN R,LV=&GETAMT           GET STORAGE FOR S.A. + WORK
         ST    13,4(0,1)                STORE ADDR OF PREV SAVE AREA
*                                         INTO MY SAVE AREA
         ST    1,8(0,13)                ADDR OF MY SA TO PREV SAVE AREA
         LM    0,1,20(13)               RESTORE R0-R1 TO ORIGINAL VALUE
         L     13,8(0,13)               POINT R13 TO MY SAVE AREA
         MEND
         MACRO
&ENDNAME LINKBACK &RCADDR=
.*********************************************************************
.*  MACRO FOR STANDARD LINKAGE CONVENTIONS AT PROGRAM EXIT.        ***
.*  USED IN CONJUNCTION WITH THE LINKSAVE MACRO.                   ***
.*                                                                 ***
.*  RCADDR=NAME   NAME OF FULLWORD RETURN CODE TO BE LOADED        ***
.*                INTO R15.  IF THIS OPERAND IS NOT USED, THE      ***
.*                RETURN CODE WILL BE THE VALUE CONTAINED IN R15   ***
.*                JUST PRIOR TO ENTERING THE CODE GENERATED BY     ***
.*                THIS MACRO.                                      ***
.*                                                                 ***
.* NOTE -                                                          ***
.*  IF GETMAIN=YES WAS USED WITH LINKSAVE, THIS MACRO WILL         ***
.*  FREEMAIN THE STORAGE AREA WHICH LINKSAVE GOTMAINED.            ***
.*                                                                 ***
.*  CHUCK HOFFMAN, SYSTEMS PROGRAMMING, GTEL COMPUTING CENTER      ***
.*********************************************************************
         GBLC  &GMN,&GAMT
         LCLA  &RCLEN
&RCLEN   SETA  K'&RCADDR               LENGTH OF NAME OF RETURN CODE
         AIF ('&GMN' EQ 'YES').FORM2   IF LINKSAVE USED A GETMAIN, GO
&ENDNAME L     13,4(0,13)              RESTORE R13 FROM MY SAVE AREA
         AIF (&RCLEN EQ 0).FORM1A
         L     15,&RCADDR              SET RETURN CODE
.FORM1A  ANOP
         LM    0,12,20(13)             RESTORE R0-12
         L     14,12(0,13)             RESTORE R14
         MVI   12(13),X'FF'            RETURN INDICATOR
         BR    14                      RETURN TO CALLING PROGRAM
         MEXIT
.FORM2   ANOP
&ENDNAME LR    1,13                    COPY MY SA ADDR FOR FREEMAIN
         AIF (K'&RCADDR EQ 0).FORM2C
         L     14,&RCADDR              SAVE RETURN CODE
         AGO .FORM2A
.FORM2C  LR    14,15                   SAVE RETURN CODE
.FORM2A  ANOP
         L     13,4(0,13)              RESTORE R13 FROM MY SAVE AREA
*        FREEMAIN R,LV=&GAMT,A=(1)     FREE STORAGE
         FREEMAIN R,LV=&GAMT,A=(1)     FREE STORAGE
         LR    15,14                   SET RETURN ADDRESS
.FORM2B  ANOP
         LM    0,12,20(13)             RESTORE R0-12
         L     14,12(0,13)             RESTORE R14
         MVI   12(13),X'FF'            RETURN INDICATOR
         BR    14                      RETURN TO CALLING PROGRAM
         MEND
         MACRO
&NM      GTEDADAT  &MAP=,&DDNAM=,&DSNAM=,&MEMBR=,&STATS=,              X
               &NDISP=,&CDISP=,                                        X
               &TRK=,&CYL=,&BLKLN=,&PRIME=,&SECND=,&DIR=,&RLSE=,       X
               &SPFRM=,&ROUND=,&VLSER=,&PRIVT=,&VLSEQ=,&VLCNT=,        X
               &VLRDS=,&UNIT=,&UNCNT=,&PARAL=,&SYSOU=,&SPGNM=,&SFMNO=, X
               &OUTLM=,&CLOSE=,&COPYS=,&LABEL=,&DSSEQ=,&PASPR=,        X
               &INOUT=,&EXPDT=,&RETPD=,&DUMMY=,&FCBIM=,&FCBAV=,        X
               &QNAME=,&TERM=,&UCS=,&UFOLD=,&UVRFY=,&DCBDS=,&DCBDD=,   X
               &SUSER=,&SHOLD=,&MSVGP=,&SSNM=,&PROT=,&BFALN=,&BFTEK=,  X
               &BLKSZ=,&BUFIN=,&BUFL=,&BUFMX=,&BUFNO=,&BUFOF=,&BUFOU=, X
               &BUFRQ=,&BUFSZ=,&CODE=,&CPRI=,&DEN=,&DSORG=,&EROPT=,    X
               &GNCP=,&INTVL=,&KYLEN=,&LIMCT=,&LRECL=,&MODE=,&NCP=,    X
               &OPTCD=,&PCIR=,&PCIS=,&PRTSP=,&RECFM=,&RSRVF=,&RSRVS=,  X
               &SOWA=,&STACK=,&THRSH=,&TRTCH=,&IPLTX=,&DIAGN=,&FUNC=,  X
               &FRID=,&PASSW=,&PERMA=,&CNVRT=,                         X
               &RTDDN=,&RTDSN=,&RTORG=,       <== FOR DSN ALLOCATION   X
               &INDDN=,&INDSN=,&INORG=,       <== FOR INFO RETRIEVAL   X
               &RTMEM=,&RTSTA=,&RTNDP=,&RTCDP=,&RTLIM=,&RTATT=,        X
               &RTLST=,&RTTYP=,&RELNO=,                                X
               &RTVOL=,&SSPRM=,&TCBAD=,&REMOV=,&UNALC=
.*
.*          +-----------------------------------------------+
.*          |  See macro GTEDADOC for documentation of the  |
.*          |  use of this and other GTEDAxxx macros.       |
.*          +-----------------------------------------------+
.*
           LCLA  &TUPLEN
&TUPLEN    SETA  0
*
&NM        DS  0D                       ALIGN FOR GETMAIN
*
**********************************************************************
***        TEXT UNITS FOR SVC99                                    ***
**********************************************************************
*
&NM.TU     DS  0F   TEXT UNITS FOR SVC99
.*
.*********************************************************************
.***       DSNAME ALLOCATION TEXT UNITS - VERB CODE 01             ***
.*********************************************************************
.*
.TUDDNAM   AIF ('&DDNAM' EQ '').TUDSNAM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDDNA#
           DS  XL6
&NM.DDNAM  DS  CL8                      DDNAME
           AGO .TUDSNAM
.TUDDNA#   ANOP
           DC  X'0001,0001,0008'
&NM.DDNAM  DC  CL8'&DDNAM'              DDNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDSNAM   AIF ('&DSNAM' EQ '').TUMEMBR
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDSNA#
           DS  XL6
&NM.DSNAM  DS  CL44                     DATASET NAME
           AGO .TUMEMBR
.TUDSNA#   ANOP
           DC  X'0002,0001,002C'        DATASET NAME (NEXT LINE)
&NM.DSNAM  DC  CL44'&DSNAM'
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUMEMBR   AIF ('&MEMBR' EQ '').TUSTATS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUMEMB#
&NM.MEMKY  DS  XL6
&NM.MEMBR  DS  CL8                      MEMBER NAME
           AGO .TUSTATS
.TUMEMB#   ANOP
&NM.MEMKY  DC  X'0003,0001,0008'
&NM.MEMBR  DC  CL8'&MEMBR'              MEMBER NAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSTATS   AIF ('&STATS' EQ '').TUNDISP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSTAT#
&NM.STATS  DS  XL7                      STATUS
           AGO .TUNDISP
.TUSTAT#   AIF ('&STATS' NE 'OLD').TUSTAT2
&NM.STATS  DC  X'0004,0001,0001,01'     STATUS=OLD
           AGO .TUNDISP
.TUSTAT2   AIF ('&STATS' NE 'MOD').TUSTAT4
&NM.STATS  DC  X'0004,0001,0001,02'     STATUS=MOD
           AGO .TUNDISP
.TUSTAT4   AIF ('&STATS' NE 'NEW').TUSTAT8
&NM.STATS  DC  X'0004,0001,0001,04'     STATUS=NEW
           AGO .TUNDISP
.TUSTAT8   AIF ('&STATS' NE 'SHR').TUNDISP
&NM.STATS  DC  X'0004,0001,0001,08'     STATUS=SHR
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUNDISP   AIF ('&NDISP' EQ '').TUCDISP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUNDIS#
&NM.NDISP  DS  XL7                      NORMAL DISP
           AGO .TUCDISP
.TUNDIS#   AIF ('&NDISP' NE 'UNCATLG').TUNDIS2
&NM.NDISP  DC  X'0005,0001,0001,01'     NORMAL DISP=UNCATLG
           AGO .TUCDISP
.TUNDIS2   AIF ('&NDISP' NE 'CATLG').TUNDIS4
&NM.NDISP  DC  X'0005,0001,0001,02'     NORMAL DISP=CATLG
           AGO .TUCDISP
.TUNDIS4   AIF ('&NDISP' NE 'DELETE').TUNDIS8
&NM.NDISP  DC  X'0005,0001,0001,04'     NORMAL DISP=DELETE
           AGO .TUCDISP
.TUNDIS8   AIF ('&NDISP' NE 'KEEP').TUCDISP
&NM.NDISP  DC  X'0005,0001,0001,08'     NORMAL DISP=KEEP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCDISP   AIF ('&CDISP' EQ '').TUTRK
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCDIS#
&NM.CDISP  DS  XL7                      COND DISP
           AGO .TUTRK
.TUCDIS#   AIF ('&CDISP' NE 'UNCATLG').TUCDIS2
&NM.CDISP  DC  X'0006,0001,0001,01'     COND DISP=UNCATLG
           AGO .TUTRK
.TUCDIS2   AIF ('&CDISP' NE 'CATLG').TUCDIS4
&NM.CDISP  DC  X'0006,0001,0001,02'     COND DISP=CATLG
           AGO .TUTRK
.TUCDIS4   AIF ('&CDISP' NE 'DELETE').TUCDIS8
&NM.CDISP  DC  X'0006,0001,0001,04'     COND DISP=DELETE
           AGO .TUTRK
.TUCDIS8   AIF ('&CDISP' NE 'KEEP').TUTRK
&NM.CDISP  DC  X'0006,0001,0001,08'     COND DISP=KEEP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUTRK     AIF ('&TRK' EQ '').TUCYL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUTRKA
&NM.TRK    DS  XL4                      TRK
           AGO .TUCYL
.TUTRKA    ANOP
&NM.TRK    DC  X'0007,0000'             TRK
           AGO .TUPRIME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCYL     AIF ('&CYL' EQ '').TUBLKLN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCYLA
&NM.CYL    DS  XL4                      CYL
           AGO .TUBLKLN
.TUCYLA    ANOP
&NM.CYL    DC  X'0008,0000'             CYL
           AGO .TUPRIME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBLKLN   AIF ('&BLKLN' EQ '').TUPRIME
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBLKL#
           DS  XL6
&NM.BLKLN  DS  AL3                      AVERAGE BLOCK LENGTH
           AGO .TUPRIME
.TUBLKL#   ANOP
           DC  X'0009,0001,0003'
&NM.BLKLN  DC  AL3(&BLKLN)              AVERAGE BLOCK LENGTH
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPRIME   AIF ('&PRIME' EQ '').TUSECND
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPRIM#
           DS  XL6
&NM.PRIME  DS  AL3                      PRIMARY SPACE QUANTITY
           AGO .TUSECND
.TUPRIM#   ANOP
           DC  X'000A,0001,0003'
&NM.PRIME  DC  AL3(&PRIME)              PRIMARY SPACE QUANTITY
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSECND   AIF ('&SECND' EQ '').TUDIR
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSECN#
           DS  XL6
&NM.SECND  DS  AL3                      SECONDARY SPACE QUANTITY
           AGO .TUDIR
.TUSECN#   ANOP
           DC  X'000B,0001,0003'
&NM.SECND  DC  AL3(&SECND)              SECONDARY SPACE QUANTITY
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDIR     AIF ('&DIR' EQ '').TURLSE
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDIRA
           DS  XL6
&NM.DIR    DS  AL3                      NUMBER OF DIRECTORY BLOCKS
           AGO .TURLSE
.TUDIRA    ANOP
           DC  X'000C,0001,0003'
&NM.DIR    DC  AL3(&DIR)                NUMBER OF DIRECTORY BLOCKS
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURLSE    AIF ('&RLSE' EQ '').TUSPFRM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURLSEA
&NM.RLSE   DS  XL4                      RLSE
           AGO .TUSPFRM
.TURLSEA   ANOP
&NM.RLSE   DC  X'000D,0000'             RLSE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSPFRM   AIF ('&SPFRM' EQ '').TUROUND
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSPFR#
&NM.SPFRM  DS  XL7                      SPACE FORMAT
           AGO .TUROUND
.TUSPFR#   AIF ('&SPFRM' NE 'ALX').TUSPFR4
&NM.SPFRM  DC  X'000E,0001,0001,02'     ALX
           AGO .TUROUND
.TUSPFR4   AIF ('&SPFRM' NE 'MXIG').TUSPFR8
&NM.SPFRM  DC  X'000E,0001,0001,04'     MXIG
           AGO .TUROUND
.TUSPFR8   AIF ('&SPFRM' NE 'CONTIG').TUROUND
&NM.SPFRM  DC  X'000E,0001,0001,08'     CONTIG
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUROUND   AIF ('&ROUND' EQ '').TUVLSER
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUROUN#
&NM.ROUND  DS  XL4                      ROUND
           AGO .TUVLSER
.TUROUN#   ANOP
&NM.ROUND  DC  X'000F,0000'             ROUND
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUVLSER   AIF ('&VLSER' EQ '').TUPRIVT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUVLSE#
           DS  XL6
&NM.VLSER  DS  CL6                      VOLUME SERIAL NUMBER
           AGO .TUPRIVT
.TUVLSE#   ANOP
           DC  X'0010,0001,0006'
&NM.VLSER  DC  CL6'&VLSER'              VOLUME SERIAL NUMBER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPRIVT   AIF ('&PRIVT' EQ '').TUVLSEQ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPRIV#
&NM.PRIVT  DS  XL4                      PVT
           AGO .TUVLSEQ
.TUPRIV#   ANOP
&NM.PRIVT  DC  X'0011,0000'             PVT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUVLSEQ   AIF ('&VLSEQ' EQ '').TUVLCNT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUVLSQ#
           DS  XL6
&NM.VLSEQ  DS  AL2                      VOLUME SEQUENCE NUMBER
           AGO .TUVLCNT
.TUVLSQ#   ANOP
           DC  X'0012,0001,0002'
&NM.VLSEQ  DC  AL2(&VLSEQ)              VOLUME SEQUENCE NUMBER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUVLCNT   AIF ('&VLCNT' EQ '').TUVLRDS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUVLCN#
           DS  XL6
&NM.VLCNT  DC  AL1                      VOLUME COUNT
           AGO .TUVLRDS
.TUVLCN#   ANOP
           DC  X'0013,0001,0001'
&NM.VLCNT  DC  AL1(&VLCNT)              VOLUME COUNT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUVLRDS   AIF ('&VLRDS' EQ '').TUUNIT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUVLRD#
           DS  XL6
&NM.VLRDS  DS  CL44                     VOLUME REF TO THIS DSN
           AGO .TUUNIT
.TUVLRD#   ANOP
           DC  X'0014,0001,002C'        VOLUME REF TO DSN (BELOW)
&NM.VLRDS  DC  CL44'&VLRDS'
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUNIT    AIF ('&UNIT' EQ '').TUUNCNT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUNITA
           DS  XL6
&NM.UNIT   DS  CL6                      UNIT
           AGO .TUUNCNT
.TUUNITA   ANOP
           DC  X'0015,0001,0006'
&NM.UNIT   DC  CL6'&UNIT'               UNIT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUNCNT   AIF ('&UNCNT' EQ '').TUPARAL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUNCN#
           DS  XL6
&NM.UNCNT  DS  AL1                      UNIT COUNT
           AGO .TUPARAL
.TUUNCN#   ANOP
           DC  X'0016,0001,0001'
&NM.UNCNT  DC  AL1(&UNCNT)              UNIT COUNT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPARAL   AIF ('&PARAL' EQ '').TUSYSOU
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPARA#
&NM.PARAL  DS  XL4                      PARALLEL MOUNT
           AGO .TUSYSOU
.TUPARA#   ANOP
&NM.PARAL  DC  X'0017,0000'             PARALLEL MOUNT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSYSOU   AIF ('&SYSOU' EQ '').TUSPGNM
           AIF ('&SYSOU' NE '*').TUSYSO2
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSYSO#
&NM.SYSOU  DS  XL4                      SYSOUT=*
           AGO .TUSPGNM
.TUSYSO#   ANOP
&NM.SYSOU  DC  X'0018,0000'             SYSOUT=*
           AGO .TUSPGNM
.TUSYSO2   ANOP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSYS##
           DS  XL6
&NM.SYSOU  DS  CL1                      SYSOUT CLASS
           AGO .TUSPGNM
.TUSYS##   ANOP
           DC  X'0018,0001,0001'
&NM.SYSOU  DC  CL1'&SYSOU'              SYSOUT CLASS
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSPGNM   AIF ('&SPGNM' EQ '').TUSFMNO
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSPGN#
           DS  XL6
&NM.SPGNM  DS  CL8                      SYSOUT PROGRAM NAME
           AGO .TUSFMNO
.TUSPGN#   ANOP
           DC  X'0019,0001,0008'
&NM.SPGNM  DC  CL8'&SPGNM'              SYSOUT PROGRAM NAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSFMNO   AIF ('&SFMNO' EQ '').TUOUTLM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSFMN#
           DS  XL6
&NM.SFMNO  DS  CL4                      SYSOUT FORM NAME/NUMBER
           AGO .TUOUTLM
.TUSFMN#   ANOP
           DC  X'001A,0001,0004'
&NM.SFMNO  DC  CL4'&SFMNO'              SYSOUT FORM NAME/NUMBER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUOUTLM   AIF ('&OUTLM' EQ '').TUCLOSE
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUOUTL#
           DS  XL6
&NM.OUTLM  DS  AL3                      OUTLIM
           AGO .TUCLOSE
.TUOUTL#   ANOP
           DC  X'001B,0001,0003'
&NM.OUTLM  DC  AL3(&OUTLM)              OUTLIM
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCLOSE   AIF ('&CLOSE' EQ '').TUCOPYS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCLOS#
&NM.CLOSE  DS  XL4                      FREE=CLOSE
           AGO .TUCOPYS
.TUCLOS#   ANOP
&NM.CLOSE  DC  X'001C,0000'             FREE=CLOSE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCOPYS   AIF ('&COPYS' EQ '').TULABEL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCOPY#
           DS  XL6
&NM.COPYS  DS  AL1                      COPIES
           AGO .TULABEL
.TUCOPY#   ANOP
           DC  X'001D,0001,0001'
&NM.COPYS  DC  AL1(&COPYS)              COPIES
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TULABEL   AIF ('&LABEL' EQ '').TUDSSEQ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TULABE#
&NM.LABEL  DS  XL7                      LABEL
           AGO .TUDSSEQ
.TULABE#   AIF ('&LABEL' NE 'NL').TULABE2
&NM.LABEL  DC  X'001E,0001,0001,01'     LABEL=NL
           AGO .TUDSSEQ
.TULABE2   AIF ('&LABEL' NE 'SL').TULABE3
&NM.LABEL  DC  X'001E,0001,0001,02'     LABEL=SL
           AGO .TUDSSEQ
.TULABE3   AIF ('&LABEL' NE 'NSL').TULABE4
&NM.LABEL  DC  X'001E,0001,0001,04'     LABEL=NSL
           AGO .TUDSSEQ
.TULABE4   AIF ('&LABEL' NE 'SUL').TULABE5
&NM.LABEL  DC  X'001E,0001,0001,0A'     LABEL=SUL
           AGO .TUDSSEQ
.TULABE5   AIF ('&LABEL' NE 'BLP').TULABE6
&NM.LABEL  DC  X'001E,0001,0001,10'     LABEL=BLP
           AGO .TUDSSEQ
.TULABE6   AIF ('&LABEL' NE 'LTM').TULABE7
&NM.LABEL  DC  X'001E,0001,0001,21'     LABEL=LTM
           AGO .TUDSSEQ
.TULABE7   AIF ('&LABEL' NE 'AL').TULABE8
&NM.LABEL  DC  X'001E,0001,0001,40'     LABEL=AL
           AGO .TUDSSEQ
.TULABE8   AIF ('&LABEL' NE 'AUL').TUDSSEQ
&NM.LABEL  DC  X'001E,0001,0001,48'     LABEL=AUL
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDSSEQ   AIF ('&DSSEQ' EQ '').TUPASPR
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDSSE#
           DS  XL6
&NM.DSSEQ  DS  AL2                      LABEL= DATASET SEQUENCE NUMBER
           AGO .TUPASPR
.TUDSSE#   ANOP
           DC  X'001F,0001,0002'
&NM.DSSEQ  DC  AL2(&DSSEQ)              LABEL= DATASET SEQUENCE NUMBER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPASPR   AIF ('&PASPR' EQ '').TUINOUT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUINOUT   AIF ('&INOUT' EQ '').TUEXPDT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUINOU#
&NM.INOUT  DS  XL7                      LABEL=IN OR OUT
           AGO .TUEXPDT
.TUINOU#   AIF ('&INOUT' NE 'IN').TUINOU2
&NM.INOUT  DC  X'0021,0001,0001,40'     LABEL=IN
           AGO .TUEXPDT
.TUINOU2   AIF ('&INOUT' NE 'OUT').TUEXPDT
&NM.INOUT  DC  X'0021,0001,0001,80'     LABEL=OUT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUEXPDT   AIF ('&EXPDT' EQ '').TURETPD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUEXPD#
           DS  XL6
&NM.EXPDT  DS  CL5                      EXPDT
           AGO .TURETPD
.TUEXPD#   ANOP
           DC  X'0022,0001,0005'
&NM.EXPDT  DC  CL5'&EXPDT'              EXPDT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURETPD   AIF ('&RETPD' EQ '').TUDUMMY
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURETP#
           DS  XL6
&NM.RETPD  DS  AL2                      RETPD
           AGO .TUDUMMY
.TURETP#   ANOP
           DC  X'0023,0001,0002'
&NM.RETPD  DC  AL2(&RETPD)              RETPD
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDUMMY   AIF ('&DUMMY' EQ '').TUFCBIM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDUMM#
&NM.DUMMY  DS  XL4                      DD DUMMY / DSN=NULLFILE
           AGO .TUFCBIM
.TUDUMM#   ANOP
&NM.DUMMY  DC  X'0024,0000'             DD DUMMY / DSN=NULLFILE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUFCBIM   AIF ('&FCBIM' EQ '').TUFCBAV
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUFCBI#
           DS  XL6
&NM.FCBIM  DS  CL4                      FCB
           AGO .TUFCBAV
.TUFCBI#   ANOP
           DC  X'0025,0001,0004'
&NM.FCBIM  DC  CL4'&FCBIM'              FCB
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUFCBAV   AIF ('&FCBAV' EQ '').TUQNAME
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUFCBA#
&NM.FCBAV  DS  XL7                      FCB VERIFY OR ALIGN
           AGO .TUQNAME
.TUFCBA#   AIF ('&FCBAV' NE 'VERIFY').TUFCBA2
&NM.FCBAV  DC  X'0026,0001,0001,04'     FCB VERIFY
           AGO .TUQNAME
.TUFCBA2   AIF ('&FCBAV' NE 'ALIGN').TUQNAME
&NM.FCBAV  DC  X'0026,0001,0001,08'     FCB ALIGN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUQNAME   AIF ('&QNAME' EQ '').TUTERM
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUTERM    AIF ('&TERM' EQ '').TUUCS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUTERMA
&NM.TERM   DS  XL4                      TERM=TS / DSN(*)
           AGO .TUUCS
.TUTERMA   ANOP
&NM.TERM   DC  X'0028,0000'             TERM=TS / DSN(*)
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUCS     AIF ('&UCS' EQ '').TUUFOLD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUCSA
           DS  XL6
&NM.UCS    DS  CL4                      UCS CHARACTER SET
           AGO .TUUFOLD
.TUUCSA    ANOP
           DC  X'0029,0001,0004'
&NM.UCS    DC  CL4'&UCS'                UCS CHARACTER SET
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUFOLD   AIF ('&UFOLD' EQ '').TUUVRFY
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUFOL#
&NM.UFOLD  DS  XL4                      UCS FOLD
           AGO .TUUVRFY
.TUUFOL#   ANOP
&NM.UFOLD  DC  X'002A,0000'             UCS FOLD
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUUVRFY   AIF ('&UVRFY' EQ '').TUDCBDS
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUVRF#
&NM.UVRFY  DS  XL4                      UCS VERIFY
           AGO .TUDCBDS
.TUUVRF#   ANOP
&NM.UVRFY  DC  X'002B,0000'             UCS VERIFY
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDCBDS   AIF ('&DCBDS' EQ '').TUDCBDD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDCBS#
           DS  XL6
&NM.DCBDS  DS  CL44                     DCB REFERENCE TO DSN
           AGO .TUDCBDD
.TUDCBS#   ANOP
           DC  X'002C,0001,0003'        DCB REFERENCE TO DSN (BELOW)
&NM.DCBDS  DC  CL44'&DCBDS'
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDCBDD   AIF ('&DCBDD' EQ '').TUSUSER
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDCBD#
           DS  XL6
&NM.DCBDD  DS  CL8                      DCB REFERENCE TO DDNAME
           AGO .TUSUSER
.TUDCBD#   ANOP
           DC  X'002D,0001,0008'
&NM.DCBDD  DC  CL8'&DCBDD'              DCB REFERENCE TO DDNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSUSER   AIF ('&SUSER' EQ '').TUSHOLD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSUSE#
           DS  XL6
&NM.SUSER  DS  CL8                      SYSOUT DESTINATION
           AGO .TUSHOLD
.TUSUSE#   ANOP
           DC  X'0058,0001,0008'
&NM.SUSER  DC  CL8'&SUSER'              SYSOUT DESTINATION
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSHOLD   AIF ('&SHOLD' EQ '').TUMSVGP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUSHOL#
&NM.SHOLD  DS  XL4                      SYSOUT HOLD=YES
           AGO .TUMSVGP
.TUSHOL#   ANOP
&NM.SHOLD  DC  X'0059,0000'             SYSOUT HOLD=YES
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUMSVGP   AIF ('&MSVGP' EQ '').TUSSNM
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSSNM    AIF ('&SSNM' EQ '').TUSSPRM
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUSSPRM   AIF ('&SSPRM' EQ '').TUPROT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPROT    AIF ('&PROT' EQ '').TUBFALN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.*
.*********************************************************************
.***          DCB ATTRIBUTE TEXT UNITS - VERB CODE 01              ***
.*********************************************************************
.*
.TUBFALN   AIF ('&BFALN' EQ '').TUBFTEK
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBFAL#
&NM.BFALN  DS  XL7                      BFALN
           AGO .TUBFTEK
.TUBFAL#   AIF ('&BFALN' NE 'F').TUBFAL2
&NM.BFALN  DC  X'002E,0001,0001,01'     BFALN=F
           AGO .TUBFTEK
.TUBFAL2   AIF ('&BFALN' NE 'D').TUBFTEK                        MI04303
&NM.BFALN  DC  X'002E,0001,0001,02'     BFALN=D
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBFTEK   AIF ('&BFTEK' EQ '').TUBLKSZ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBFTE#
&NM.BFTEK  DS  XL7                      BFTEK
           AGO .TUBLKSZ
.TUBFTE#   AIF ('&BFTEK' NE 'D').TUBFTE2
&NM.BFTEK  DC  X'002F,0001,0001,08'     BFTEK=D
           AGO .TUBLKSZ
.TUBFTE2   AIF ('&BFTEK' NE 'E').TUBFTE3
&NM.BFTEK  DC  X'002F,0001,0001,10'     BFTEK=E
           AGO .TUBLKSZ
.TUBFTE3   AIF ('&BFTEK' NE 'R').TUBFTE4
&NM.BFTEK  DC  X'002F,0001,0001,20'     BFTEK=R
           AGO .TUBLKSZ
.TUBFTE4   AIF ('&BFTEK' NE 'S').TUBFTE5
&NM.BFTEK  DC  X'002F,0001,0001,40'     BFTEK=S
           AGO .TUBLKSZ
.TUBFTE5   AIF ('&BFTEK' NE 'A').TUBLKSZ
&NM.BFTEK  DC  X'002F,0001,0001,60'     BFTEK=A
           AGO .TUBLKSZ
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBLKSZ   AIF ('&BLKSZ' EQ '').TUBUFIN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBLKS#
           DS  XL6
&NM.BLKSZ  DS  AL2                      BLKSIZE
           AGO .TUBUFIN
.TUBLKS#   ANOP
           DC  X'0030,0001,0002'
&NM.BLKSZ  DC  AL2(&BLKSZ)              BLKSIZE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFIN   AIF ('&BUFIN' EQ '').TUBUFL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFI#
           DS  XL6
&NM.BUFIN  DS  AL1                      BUFIN
           AGO .TUBUFL
.TUBUFI#   ANOP
           DC  X'0031,0001,0001'
&NM.BUFIN  DC  AL1(&BUFIN)              BUFIN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFL    AIF ('&BUFL' EQ '').TUBUFMX
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFLA
           DS  XL6
&NM.BUFL   DC  AL2                      BUFL
           AGO .TUBUFMX
.TUBUFLA   ANOP
           DC  X'0032,0001,0002'
&NM.BUFL   DC  AL2(&BUFL)               BUFL
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFMX   AIF ('&BUFMX' EQ '').TUBUFNO
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFM#
           DS  XL6
&NM.BUFMX  DS  AL1                      BUFMAX
           AGO .TUBUFNO
.TUBUFM#   ANOP
           DC  X'0033,0001,0001'
&NM.BUFMX  DC  AL1(&BUFMX)              BUFMAX
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFNO   AIF ('&BUFNO' EQ '').TUBUFOF
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFN#
           DS  XL6
&NM.BUFNO  DC  AL1                      BUFNO
           AGO .TUBUFOF
.TUBUFN#   ANOP
           DC  X'0034,0001,0001'
&NM.BUFNO  DC  AL1(&BUFNO)              BUFNO
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFOF   AIF ('&BUFOF' EQ '').TUBUFOU
&TUPLEN    SETA &TUPLEN+1
           AIF ('&BUFOF' NE 'L').TUBUFO2
           AIF ('&MAP' NE 'ONLY').TUBUFF#
&NM.BUFOF  DS  XL7                      BUFOFF=L
           AGO .TUBUFOU
.TUBUFF#   ANOP
&NM.BUFOF  DC  X'0035,0001,0001,80'     BUFOFF=L
           AGO .TUBUFOU
.TUBUFO2   ANOP
           AIF ('&MAP' NE 'ONLY').TUBUF##
           DS  XL6
&NM.BUFOF  DS  AL1                      BUFOFF
           AGO .TUBUFOU
.TUBUF##   ANOP
           DC  X'0035,0001,0001'
&NM.BUFOF  DC  AL1(&BUFOF)              BUFOFF
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFOU   AIF ('&BUFOU' EQ '').TUBUFRQ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFO#
           DS  XL6
&NM.BUFOU  DS  AL1                      BUFOUT
           AGO .TUBUFRQ
.TUBUFO#   ANOP
           DC  X'0036,0001,0001'
&NM.BUFOU  DC  AL1(&BUFOU)              BUFOUT
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFRQ   AIF ('&BUFRQ' EQ '').TUBUFSZ
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFR#
           DS  XL6
&NM.BUFRQ  DS  AL1                      BUFRQ
           AGO .TUBUFSZ
.TUBUFR#   ANOP
           DC  X'0037,0001,0001'
&NM.BUFRQ  DC  AL1(&BUFRQ)              BUFRQ
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUBUFSZ   AIF ('&BUFSZ' EQ '').TUCODE
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUBUFS#
           DS  XL6
&NM.BUFSZ  DS  AL2                      BUFSIZE
           AGO .TUCODE
.TUBUFS#   ANOP
           DC  X'0038,0001,0002'
&NM.BUFSZ  DC  AL2(&BUFSZ)              BUFSIZE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCODE    AIF ('&CODE' EQ '').TUCPRI
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCPRI    AIF ('&CPRI' EQ '').TUDEN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDEN     AIF ('&DEN' EQ '').TUDSORG
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDENA
&NM.DEN    DS  XL7                      DEN
           AGO .TUDSORG
.TUDENA    AIF ('&DEN' NE '0').TUDE2
&NM.DEN    DC  X'003B,0001,0001,03'     DEN=0  (200 BPI, 7-TRACK)
           AGO .TUDSORG
.TUDE2     AIF ('&DEN' NE '1').TUDE3
&NM.DEN    DC  X'003B,0001,0001,43'     DEN=1  (556 BPI, 7-TRACK)
           AGO .TUDSORG
.TUDE3     AIF ('&DEN' NE '2').TUDE4
&NM.DEN    DC  X'003B,0001,0001,83'     DEN=2  (800 BPI, 7/9-TRACK)
           AGO .TUDSORG
.TUDE4     AIF ('&DEN' NE '3').TUDE5
&NM.DEN    DC  X'003B,0001,0001,C3'     DEN=3  (1600 BPI, 9-TRACK)
           AGO .TUDSORG
.TUDE5     AIF ('&DEN' NE '4').TUDSORG
&NM.DEN    DC  X'003B,0001,0001,D3'     DEN=4  (6250 BPI, 9-TRACK)
           AGO .TUDSORG
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUDSORG   AIF ('&DSORG' EQ '').TUEROPT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUDSOR#
&NM.DSORG  DS  XL8                      DSORG
           AGO .TUEROPT
.TUDSOR#   AIF ('&DSORG' NE 'VS').TUDSOR2
&NM.DSORG  DC  X'003C,0001,0002,0008'   DSORG=VS
           AGO .TUEROPT
.TUDSOR2   AIF ('&DSORG' NE 'TQ').TUDSOR3
&NM.DSORG  DC  X'003C,0001,0002,0020'   DSORG=TQ
           AGO .TUEROPT
.TUDSOR3   AIF ('&DSORG' NE 'TX').TUDSOR4
&NM.DSORG  DC  X'003C,0001,0002,0040'   DSORG=TX
           AGO .TUEROPT
.TUDSOR4   AIF ('&DSORG' NE 'GS').TUDSOR5
&NM.DSORG  DC  X'003C,0001,0002,0080'   DSORG=GS
           AGO .TUEROPT
.TUDSOR5   AIF ('&DSORG' NE 'PO').TUDSOR6
&NM.DSORG  DC  X'003C,0001,0002,0200'   DSORG=PO
           AGO .TUEROPT
.TUDSOR6   AIF ('&DSORG' NE 'POU').TUDSOR7
&NM.DSORG  DC  X'003C,0001,0002,0300'   DSORG=POU
           AGO .TUEROPT
.TUDSOR7   AIF ('&DSORG' NE 'MQ').TUDSOR8
&NM.DSORG  DC  X'003C,0001,0002,0400'   DSORG=MQ
           AGO .TUEROPT
.TUDSOR8   AIF ('&DSORG' NE 'CQ').TUDSOR9
&NM.DSORG  DC  X'003C,0001,0002,0800'   DSORG=CQ
           AGO .TUEROPT
.TUDSOR9   AIF ('&DSORG' NE 'CX').TUDSORA
&NM.DSORG  DC  X'003C,0001,0002,1000'   DSORG=CX
           AGO .TUEROPT
.TUDSORA   AIF ('&DSORG' NE 'DA').TUDSORB
&NM.DSORG  DC  X'003C,0001,0002,2000'   DSORG=DA
           AGO .TUEROPT
.TUDSORB   AIF ('&DSORG' NE 'DAU').TUDSORC
&NM.DSORG  DC  X'003C,0001,0002,2100'   DSORG=DAU
           AGO .TUEROPT
.TUDSORC   AIF ('&DSORG' NE 'PS').TUDSORD
&NM.DSORG  DC  X'003C,0001,0002,4000'   DSORG=PS
           AGO .TUEROPT
.TUDSORD   AIF ('&DSORG' NE 'PSU').TUEROPT
&NM.DSORG  DC  X'003C,0001,0002,4100'   DSORG=PSU
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUEROPT   AIF ('&EROPT' EQ '').TUGNCP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUEROP#
&NM.EROPT  DS  XL7                      EROPT
           AGO .TUGNCP
.TUEROP#   AIF ('&EROPT' NE 'T').TUEROP2
&NM.EROPT  DC  X'003D,0001,0001,10'     EROPT=T
           AGO .TUGNCP
.TUEROP2   AIF ('&EROPT' NE 'ABE').TUEROP3
&NM.EROPT  DC  X'003D,0001,0001,20'     EROPT=ABE
           AGO .TUGNCP
.TUEROP3   AIF ('&EROPT' NE 'SKP').TUEROP4
&NM.EROPT  DC  X'003D,0001,0001,40'     EROPT=SKP
           AGO .TUGNCP
.TUEROP4   AIF ('&EROPT' NE 'ACC').TUGNCP
&NM.EROPT  DC  X'003D,0001,0001,80'     EROPT=ACC
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUGNCP    AIF ('&GNCP' EQ '').TUINTVL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUGNCPA
           DS  XL6
&NM.GNCP   DC  AL1                      GNCP
           AGO .TUINTVL
.TUGNCPA   ANOP
           DC  X'003E,0001,0001'                                MI04303
&NM.GNCP   DC  AL1(&GNCP)               GNCP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUINTVL   AIF ('&INTVL' EQ '').TUKYLEN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUKYLEN   AIF ('&KYLEN' EQ '').TULIMCT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUKYLE#
           DS  XL6
&NM.KYLEN  DS  AL1                      KEYLEN
           AGO .TULIMCT
.TUKYLE#   ANOP
           DC  X'0040,0001,0001'
&NM.KYLEN  DC  AL1(&KYLEN)              KEYLEN
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TULIMCT   AIF ('&LIMCT' EQ '').TULRECL
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TULRECL   AIF ('&LRECL' EQ '').TUMODE
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TULREC#
           DS  XL6
&NM.LRECL  DS  AL2                      LRECL
           AGO .TUMODE
.TULREC#   ANOP
           DC  X'0042,0001,0002'
&NM.LRECL  DC  AL2(&LRECL)              LRECL
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUMODE    AIF ('&MODE' EQ '').TUNCP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUNCP     AIF ('&NCP' EQ '').TUOPTCD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUNCPA
           DS  XL6
&NM.NCP    DS  AL1                      NCP
           AGO .TUOPTCD
.TUNCPA    ANOP
           DC  X'0044,0001,0001'
&NM.NCP    DC  AL1(&NCP)                NCP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUOPTCD   AIF ('&OPTCD' EQ '').TUPCIR
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUOPTC#
&NM.OPTCD  DS  XL7                      OPTCD
           AGO .TUPCIR
.TUOPTC#   AIF ('&OPTCD' NE 'W').TUPCIR
&NM.OPTCD  DC  X'0045,0001,0001,80'     OPTCD=W
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPCIR    AIF ('&PCIR' EQ '').TUPCIS
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPCIS    AIF ('&PCIS' EQ '').TUPRTSP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPRTSP   AIF ('&PRTSP' EQ '').TURECFM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPRTS#
&NM.PRTSP  DS  XL7                      PRTSP
           AGO .TURECFM
.TUPRTS#   AIF ('&PRTSP' NE '0').TUPRTS2
&NM.PRTSP  DC  X'0048,0001,0001,01'     PRTSP=0
           AGO .TURECFM
.TUPRTS2   AIF ('&PRTSP' NE '1').TUPRTS3
&NM.PRTSP  DC  X'0048,0001,0001,09'     PRTSP=1
           AGO .TURECFM
.TUPRTS3   AIF ('&PRTSP' NE '2').TUPRTS4
&NM.PRTSP  DC  X'0048,0001,0001,11'     PRTSP=2
           AGO .TURECFM
.TUPRTS4   AIF ('&PRTSP' NE '3').TURECFM
&NM.PRTSP  DC  X'0048,0001,0001,19'     PRTSP=3
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURECFM   AIF ('&RECFM' EQ '').TURSRVF
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURECF#
&NM.RECFM  DS  XL7                      RECFM=F
           AGO .TURSRVF
.TURECF#   AIF ('&RECFM' NE 'F').TURECF2
&NM.RECFM  DC  X'0049,0001,0001,80'     RECFM=F
           AGO .TURSRVF
.TURECF2   AIF ('&RECFM' NE 'FA').TURECF3
&NM.RECFM  DC  X'0049,0001,0001,84'     RECFM=FA
           AGO .TURSRVF
.TURECF3   AIF ('&RECFM' NE 'FB').TURECF4
&NM.RECFM  DC  X'0049,0001,0001,90'     RECFM=FB
           AGO .TURSRVF
.TURECF4   AIF ('&RECFM' NE 'FBA').TURECF5
&NM.RECFM  DC  X'0049,0001,0001,94'     RECFM=FBA
           AGO .TURSRVF
.TURECF5   AIF ('&RECFM' NE 'V').TURECF6
&NM.RECFM  DC  X'0049,0001,0001,40'     RECFM=V
           AGO .TURSRVF
.TURECF6   AIF ('&RECFM' NE 'VB').TURECF7
&NM.RECFM  DC  X'0049,0001,0001,50'     RECFM=VB
           AGO .TURSRVF
.TURECF7   AIF ('&RECFM' NE 'U').TURSRVF
&NM.RECFM  DC  X'0049,0001,0001,C0'     RECFM=U
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURSRVF   AIF ('&RSRVF' EQ '').TURSRVS
.TURSRVS   AIF ('&RSRVS' EQ '').TUSOWA
.TUSOWA    AIF ('&SOWA' EQ '').TUSTACK
.TUSTACK   AIF ('&STACK' EQ '').TUTHRSH
.TUTHRSH   AIF ('&THRSH' EQ '').TUTRTCH
.TUTRTCH   AIF ('&TRTCH' EQ '').TUIPLTX
.TUIPLTX   AIF ('&IPLTX' EQ '').TUDIAGN
.TUDIAGN   AIF ('&DIAGN' EQ '').TUFUNC
.TUFUNC    AIF ('&FUNC' EQ '').TUFRID
.TUFRID    AIF ('&FRID' EQ '').TUPASSW
.*
.*********************************************************************
.***       NON-JCL DYNAMIC ALLOCATION FUNCTIONS - VERB CODE 01     ***
.*********************************************************************
.*
.TUPASSW   AIF ('&PASSW' EQ '').TUPERMA
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUPERMA   AIF ('&PERMA' EQ '').TUCNVRT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUPERM#
&NM.PERMA  DS  XL4                      PERMANENT ALLOCATION
           AGO .TUCNVRT
.TUPERM#   ANOP
&NM.PERMA  DC  X'0052,0000'             PERMANENT ALLOCATION
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUCNVRT   AIF ('&CNVRT' EQ '').TURTDDN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUCNVR#
&NM.CNVRT  DS  XL4                      CONVERTABLE ALLOCATION
           AGO .TURTDDN
.TUCNVR#   ANOP
&NM.CNVRT  DC  X'0053,0000'             CONVERTABLE ALLOCATION
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTDDN   AIF ('&RTDDN' EQ '').TURTDSN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTDD#
           DS  XL4
           DS  XL2                      LEN OF RETURNED DDNAME
&NM.RTDDN  DS  CL8                      RETURNED DDNAME
           AGO .TURTDSN
.TURTDD#   ANOP
           DC  X'0055,0001'
           DC  XL2'0008'                LEN OF RETURNED DDNAME
&NM.RTDDN  DC  CL8' '                   RETURNED DDNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTDSN   AIF ('&RTDSN' EQ '').TURTORG
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTDS#
           DS  XL4
           DS  AL2                      LEN OF RETURNED DSNAME
&NM.RTDSN  DS  CL44                     RETURNED DSNAME
           AGO .TURTORG
.TURTDS#   ANOP
           DC  X'0056,0001'
           DC  AL2(44)                  LEN OF RETURNED DSNAME
&NM.RTDSN  DC  CL44' '                  RETURNED DSNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTORG   AIF ('&RTORG' EQ '').TURTVOL
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTOR#
           DS  XL6
&NM.RTORG  DS  XL2                      RETURNED DSORG
           AGO .TURTVOL
.TURTOR#   DC  X'0057,0001,0002'
&NM.RTORG  DC  XL2'0000'                RETURNED DSORG
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTVOL   AIF ('&RTVOL' EQ '').TUREMOV
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTVO#
           DS  XL4
           DS  XL2                      LEN OF RETURNED VOLSER
&NM.RTVOL  DS  CL6                      RETURNED VOLSER
           AGO .TUREMOV
.TURTVO#   ANOP
           DC  X'005D,0001'
           DC  XL2'0006'                LEN OF RETURNED VOLSER
&NM.RTVOL  DC  CL6' '                   RETURNED VOLSER
.*
.*********************************************************************
.***       UNALLOCATE - VERB CODE 02                               ***
.*********************************************************************
.*
.TUREMOV   AIF ('&REMOV' EQ '').TUUNALC
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUREMO#
&NM.REMOV  DS  XL4                      REMOVE INUSE EVEN IF PERMANENT
           AGO .TUUNALC
.TUREMO#   ANOP
&NM.REMOV  DC  X'0008,0000'             REMOVE INUSE EVEN IF PERMANENT
.*
.TUUNALC   AIF ('&UNALC' EQ '').TUTCBAD
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUUNAL#
&NM.UNALC  DS  XL4                      UNALLOCATE EVEN IF PERMANENT
           AGO .TUTCBAD
.TUUNAL#   ANOP
&NM.UNALC  DC  X'0007,0000'             UNALLOCATE EVEN IF PERMANENT
.*
.*********************************************************************
.***       REMOVE IN-USE ATTRIBUTE - VERB CODE 05                  ***
.*********************************************************************
.*
.TUTCBAD   AIF ('&TCBAD' EQ '').TUINDDN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUTCBA#
           DS  XL6
&NM.TCBAD  DS  XL4                      TCB ADDRESS
           AGO .TUINDDN
.TUTCBA#   ANOP
           DC  X'0001,0001,0004'
&NM.TCBAD  DS  XL4                      TCB ADDRESS
.*
.*********************************************************************
.***       RETURN INFORMATION - VERB CODE 07                       ***
.*********************************************************************
.*
.TUINDDN   AIF ('&INDDN' EQ '').TUINDSN
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUINDD#
           DS  XL4
           DS  XL2                      LEN OF RETURNED DDNAME
&NM.INDDN  DS  CL8                      RETURNED DDNAME
           AGO .TUINDSN
.TUINDD#   ANOP
           DC  X'0004,0001'
           DC  XL2'0008'                LEN OF RETURNED DDNAME
&NM.INDDN  DC  CL8' '                   RETURNED DDNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUINDSN   AIF ('&INDSN' EQ '').TUINORG
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUINDS#
           DS  XL4
           DS  AL2                      LEN OF RETURNED DSNAME
&NM.INDSN  DS  CL44                     RETURNED DSNAME
           AGO .TUINORG
.TUINDS#   ANOP
           DC  X'0005,0001'
           DC  AL2(44)                  LEN OF RETURNED DSNAME
&NM.INDSN  DC  CL44' '                  RETURNED DSNAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUINORG   AIF ('&INORG' EQ '').TURTMEM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TUINOR#
           DS  XL6
&NM.INORG  DS  XL2                      RETURNED DSORG
           AGO .TURTMEM
.TUINOR#   DC  X'000A,0001,0002'
&NM.INORG  DC  XL2'0000'                RETURNED DSORG
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTMEM   AIF ('&RTMEM' EQ '').TURTSTA
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTME#
           DS  XL6
&NM.RTMEM  DS  CL8                      RETURNED MEMBER NAME
           AGO .TURTSTA
.TURTME#   ANOP
           DC  X'0006,0001,0008'
&NM.RTMEM  DC  CL8' '                   RETURNED MEMBER NAME
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTSTA   AIF ('&RTSTA' EQ '').TURTNDP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTST#
           DS  XL6
&NM.RTSTA  DS  XL1                      RETURNED DATASET STATUS
           AGO .TURTNDP
.TURTST#   ANOP
           DC  X'0007,0001,0001'
&NM.RTSTA  DS  XL1'00'                  RETURNED DATASET STATUS
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTNDP   AIF ('&RTNDP' EQ '').TURTCDP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTND#
           DS  XL6
&NM.RTNDP  DS  XL1                      RETURNED NORMAL DISP
           AGO .TURTCDP
.TURTND#   ANOP
           DC  X'0008,0001,0001'
&NM.RTNDP  DS  XL1'00'                  RETURNED NORMAL DISP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTCDP   AIF ('&RTCDP' EQ '').TURTLIM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTCD#
           DS  XL6
&NM.RTCDP  DS  XL1                      RETURNED CONDITIONAL DISP
           AGO .TURTLIM
.TURTCD#   ANOP
           DC  X'0009,0001,0001'
&NM.RTCDP  DS  XL1'00'                  RETURNED CONDITIONAL DISP
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTLIM   AIF ('&RTLIM' EQ '').TURTATT
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTLI#
           DS  XL6
&NM.RTLIM  DS  XL2                      RETURNED LIMIT SPECIFICATION
           AGO .TURTATT
.TURTLI#   ANOP
           DC  X'000B,0001,0002'
&NM.RTLIM  DS  XL2'0000'                RETURNED LIMIT SPECIFICATION
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTATT   AIF ('&RTATT' EQ '').TURTLST
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTAT#
           DS  XL6
&NM.RTATT  DS  XL1                      RETURNED D.A. ATTRIBUTE
           AGO .TURTLST
.TURTAT#   ANOP
           DC  X'000C,0001,0001'
&NM.RTATT  DS  XL1'00'                  RETURNED D.A. ATTRIBUTE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTLST   AIF ('&RTLST' EQ '').TURTTYP
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTLS#
           DS  XL6
&NM.RTLST  DS  XL1                      RETURNED LAST ENTRY SPEC.
           AGO .TURTTYP
.TURTLS#   ANOP
           DC  X'000D,0001,0001'
&NM.RTLST  DS  XL1'00'                  RETURNED LAST ENTRY SPEC.
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURTTYP   AIF ('&RTTYP' EQ '').TURELNO
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURTTY#
           DS  XL6
&NM.RTTYP  DS  XL1                      RETURNED DATASET TYPE
           AGO .TURELNO
.TURTTY#   ANOP
           DC  X'000E,0001,0001'
&NM.RTTYP  DS  XL1'00'                  RETURNED DATASET TYPE
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TURELNO   AIF ('&RELNO' EQ '').TUENDM
&TUPLEN    SETA &TUPLEN+1
           AIF ('&MAP' NE 'ONLY').TURELN#
           DS  XL6
&NM.RELNO  DS  XL2                      RETURNED RELATIVE REQUEST NO.
           AGO .TUENDM
.TURELN#   ANOP
           DC  X'000F,0001,0002'
&NM.RELNO  DS  XL2'0000'                RETURNED RELATIVE REQUEST NO.
.*
.*********************************************************************
.***       MARK END OF LIST OF TEXT UNITS                          ***
.*********************************************************************
.*
.TUENDM    AIF ('&MAP' NE 'ONLY').TUENDU#
           DS  XL1                      END OF LIST MARKER
           AGO .TUEND
.TUENDU#   ANOP
           DC  X'FF'                    END OF LIST MARKER
.* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
.TUEND     ANOP
.*
**********************************************************************
***        REQUEST BLOCKS FOR SVC99                                ***
**********************************************************************
*
&NM.RBP    DS  A                        POINTER TO REQUEST BLOCK
&NM.RB     DS  5A                       REQUEST BLOCK
&NM.TUPL   DS  &TUPLEN.A                TEXT UNIT POINTER LIST
*
**********************************************************************
***        DAIRFAIL PARAMETER BLOCK & MISCELLANEOUS STORAGE        ***
**********************************************************************
*
&NM.DFPRM  DS  6F                       PARM BLOCK FOR IKJEFF18
*
&NM.S99RC  DS  F                        STORAGE AREA FOR SVC 99 R/C
           AIF ('&MAP' NE 'ONLY').DF2
&NM.F02EP  DS  F                        STORGE AREA FOR EP OF IKJEFF18
&NM.ID     DS  XL2                      DAIRFAIL SWITCHES & CALLER ID
           AGO .DF3
.DF2       ANOP
&NM.F02EP  DC  F'0'                     STORGE AREA FOR EP OF IKJEFF18
&NM.ID     DC  X'0032'                  DAIRFAIL SWITCHES & CALLER ID
.DF3       ANOP
*
**********************************************************************
***        EQUATE FOR TOTAL LENGTH                                 ***
**********************************************************************
*
           DS  0D                       ALIGN FOR GETMAIN
&NM.LEN    EQU *-&NM                    TOTAL LENGTH
         MEND
         MACRO
&LABEL   GTEDASET &NM,&CPPLPTR=
.*
.*          +-----------------------------------------------+
.*          |  See macro GTEDADOC for documentation of the  |
.*          |  use of this and other GTEDAxxx macros.       |
.*          +-----------------------------------------------+
.*
*
**********************************************************************
***   SET POINTERS AND DATA FOR DYNAMIC ALLOCATION IN DATA AREAS   ***
***   CREATED BY MACRO GTEDADAT.                                   ***
**********************************************************************
*
**********************************************************************
***      PLACE ADDRESS OF S99RB INTO S99RBPTR.                     ***
**********************************************************************
*
&LABEL   LA    1,&NM.RB                       ==> R1 POINTS TO S99RB
         ST    1,&NM.RBP                          FILL IN S99RBPTR
         OI    &NM.RBP,X'80'                      TURN ON HI BIT
*
**********************************************************************
***      FILL IN S99RB REQUEST BLOCK.                              ***
***      MAPPING MACRO IEFZB4D0 MUST APPEAR IN SOURCE.             ***
**********************************************************************
*
         MVI   (S99RBLN-S99RB)(1),X'14'           FILL IN LENGTH
         MVI   (S99VERB-S99RB)(1),X'00'           ZERO VERB CODE
         XC    (S99FLAG1-S99RB)(4,1),(S99FLAG1-S99RB)(1)   ZERO FLAGS1
         OI    (S99FLAG1-S99RB)(1),S99ONCNV       SET FLAGS1 OK CONVRT
         OI    (S99FLAG1-S99RB)(1),S99NOMNT       SET FLAGS1 NO MOUNT
         LA    2,&NM.TUPL                     ==> R2 POINTS TO TUPL
         ST    2,(S99TXTPP-S99RB)(0,1)            TUPL ADDR INTO RB
         XC    (S99FLAG2-S99RB)(4,1),(S99FLAG2-S99RB)(1)   ZERO FLAGS2
*
**********************************************************************
***  BUILD TUPL.                                                   ***
***  KEY OF LAST TEXT UNIT MUST BE X'FF..'                         ***
**********************************************************************
*
         LA    1,&NM.TU                       ==> R1 POINTS TO TUNITS
         XR    0,0                                CLEAR R0 FOR COUNTER
         XR    15,15                              CLEAR R15 WORK REG
*
RBA&SYSNDX CLI (S99TUKEY-S99TUNIT)(1),X'FF'       IF KEY IS X'FF..'
         BE    RBD&SYSNDX                           BRANCH OUT OF LOOP
         ST    1,0(0,2)                           ADDR OF KEY TO TUPL
         LA    2,4(0,2)                           INCR POINTER TO TUPL
*
         ICM   0,3,(S99TUNUM-S99TUNIT)(1)         TU NUM TO R0
         LA    1,4(0,1)                           R1 POINTS BEYOND NUM
         LTR   0,0                                IF TU NUM IS 0
         BZ    RBA&SYSNDX                         PROCESS NEXT TU
*
         ICM   15,3,0(1)                          TU LEN TO R15
         LA    1,2(15,1)                          PNT BEYND LEN & PARM
         BCT   0,*-8                              DO FOR EACH LEN+PARM
*
         B     RBA&SYSNDX                         PROCESS NEXT TU
*
RBD&SYSNDX LA  15,4(0,0)                          POINT TO LAST
         SR    2,15                                 TUPL ENTRY
         OI    0(2),S99TUPLN                      MARK LAST TUPL ENTRY
*
**********************************************************************
***  FILL IN THE DAIRFAIL PARAMETER BLOCK.                         ***
***  IKJEFFDF DFDSECT=YES,DFDSEC2=YES MUST APPEAR IN SOURCE.       ***
**********************************************************************
*
         MVC   &NM.DFPRM+(DFS99RBP-DFDSECTD)(4),&NM.RBP *PTR TO RB
*
         LA    1,&NM.S99RC
         ST    1,&NM.DFPRM+(DFRCP-DFDSECTD)             *PTR TO S99RC
*
         LA    1,&NM.F02EP
         ST    1,&NM.DFPRM+(DFJEFF02-DFDSECTD)          *PTR TO EP
*
         LA    1,&NM.ID
         ST    1,&NM.DFPRM+(DFIDP-DFDSECTD)             *PTR TO SW+ID
*
         MVC   &NM.DFPRM+(DFCPPLP-DFDSECTD)(4),&CPPLPTR *PTR TO CPPL
*
         XC  &NM.DFPRM+(DFBUFP-DFDSECTD)(4),&NM.DFPRM+(DFBUFP-DFDSECTD)
*                                                       *ZERO BUFF ADDR
         MEND
         MACRO
&LABEL   GTEDAALC  &NM,&VERB=AL,&ERRMSG=YES
.*
.*          +-----------------------------------------------+
.*          |  See macro GTEDADOC for documentation of the  |
.*          |  use of this and other GTEDAxxx macros.       |
.*          +-----------------------------------------------+
.*
*
**********************************************************************
***   PERFORM DYNAMIC ALLOCATION USING A DATA AREA CREATED         ***
***   BY MACRO GTEDADAT, AND POINTERS/DATA SET BY MACRO GTEDASET.  ***
**********************************************************************
*
**********************************************************************
***   SET VERB CODE INTO S99RB.                                    ***
***   MAPPING MACRO IEFZB4D0 MUST APPEAR IN THE SOURCE.            ***
**********************************************************************
*
&LABEL   LA    1,&NM.RB
.*
.VBAL    AIF   ('&VERB' NE 'AL').VBUN
         MVI   (S99VERB-S99RB)(1),S99VRBAL   SET VERB, DSN ALLOC
         AGO   .VBEND
.VBUN    AIF   ('&VERB' NE 'UN').VBCC
         MVI   (S99VERB-S99RB)(1),S99VRBUN   SET VERB, DSN UNALLOC
         AGO   .VBEND
.VBCC    AIF   ('&VERB' NE 'CC').VBDC
         MVI   (S99VERB-S99RB)(1),S99VRBCC   SET VERB, CONCATENATE
         AGO   .VBEND
.VBDC    AIF   ('&VERB' NE 'DC').VBRI
         MVI   (S99VERB-S99RB)(1),S99VRBDC   SET VERB, DECONCATENATE
         AGO   .VBEND
.VBRI    AIF   ('&VERB' NE 'RI').VBDN
         MVI   (S99VERB-S99RB)(1),S99VRBRI   SET VERB, REMOVE IN-USE
         AGO   .VBEND
.VBDN    AIF   ('&VERB' NE 'DN').VBIN
         MVI   (S99VERB-S99RB)(1),S99VRBDN   SET VERB, DDN ALLOC
         AGO   .VBEND
.VBIN    AIF   ('&VERB' NE 'IN').VBEND
         MVI   (S99VERB-S99RB)(1),S99VRBIN   SET VERB, REQUEST INFO
         AGO   .VBEND
.VBEND   ANOP
.*
*
**********************************************************************
***    DO DYNAMIC ALLOCATION                                       ***
**********************************************************************
*
         LA    1,&NM.RBP                ADDRESS OF PTR TO SVC-99 RB
         SVC   99                       DYNALLOC
         ST    15,&NM.S99RC             SAVE RETURN CODE FROM SVC-99
.*
.*********************************************************************
.**                                                                ***
.**   IF &ERRMSG=NO, DO NOT EVER GENERATE CODE FOR IKJEFF18        ***
.**                                                                ***
.*********************************************************************
.*
         AIF   ('&ERRMSG' EQ 'NO').NOPR
.*
*
**********************************************************************
***    IF R/C FROM DYNAMIC ALLOCATION NOT ZERO,                    ***
***    EXECUTE THE IKJEFF18 (DAIRFAIL) PROGRAM TO PRODUCE          ***
***    ERROR MESSAGES.                                             ***
**********************************************************************
*
         CNOP  2,4                      ALIGN FOR BRANCH INSTRUCTION
         LTR   15,15                    IF RETURN CODE IS GOOD
         BZ    EXZ&SYSNDX                 BRANCH TO END OF ROUTINE
         BAL   1,EXA&SYSNDX  BRANCH AROUND LIST
*
**********************************************************************
***    EXCEPTIONS, DON'T USE IKJEFF18 FOR THESE VERB/ERROR COMBOS  ***
***                                                                ***
         DC    H'1'          NUMBER OF MEMBERS IN THIS LIST
         DC    X'02,0438'    VERB 02 ERR 0438 DDNAME NOT FOUND
***                                                                ***
**********************************************************************
*
EXA&SYSNDX LA    2,2(0,1)                    R2 IS POINTER TO COMBOS
           LH    1,0(0,1)                    R1 IS COUNT OF COMBOS
           LA    15,&NM.RB                   R15 IS BASE OF RB
*
           CLC   (S99VERB-S99RB)(1,15),0(2)  IF NO MATCH ON VERB
           BNE   *+14                          BRANCH TO END OF LOOP
           CLC   (S99ERROR-S99RB)(2,15),1(2) ELSE IF ERRCDE MATCHES
           BE    EXZ&SYSNDX                    BRANCH TO ENDING
           LA    2,6(0,2)                    POINT TO NEXT ENTRY
           BCT   1,*-24                      LOOP BACK UP TIL EOL
*
         LA    1,&NM.DFPRM              POINT TO IKJEFF18 PARM BLOCK
         CNOP  0,4                      ALIGN FOR FOLLOWING BAL
         BAL   15,*+20                  LOAD CONST ADDR AND BRANCH
         DC    A(*+8)                   ADDR OF LINK PARM LIST
         DC    A(0)                     ADDR OF DCB (NONE)
         DC    CL8'IKJEFF18'            EP NAME
         SVC   6                        LINK
*
.NOPR    ANOP
EXZ&SYSNDX NOPR  0                        END POINT
         MEND
         MACRO                                                  TS05204
         EXNAM  &MASK                                           TS05204
.************************************************************** TS05204
.** CREATE NAME TABLE FOR INST.-EXCEPTED NAMES OR MASKS     *** TS05204
.************************************************************** TS05204
         GBLA  &EXNUM                                           TS05204
         LCLA  &EXLEN                                           TS05204
         AIF   (&EXNUM NE 0).EXNAME1                            TS05204
EXNAMES  DS    0D                                               TS05204
.EXNAME1 ANOP                                                   TS05204
&EXLEN   SETA  K'&MASK                                          TS05204
         DC    CL8'&MASK',H'&EXLEN'                             TS05204
&EXNUM   SETA  &EXNUM+1                                         TS05204
         MEND                                                   TS05204
*                                                               TS05204
         SPACE 4                                                TS05204
*                                                               TS05204
         MACRO                                                  TS05204
         EXTBL ,                                                TS05204
.************************************************************** TS05204
.**   CREATE PSEUDO-PDE'S FOR INST.-EXCEPTED NAMES OR MASKS *** TS05204
.************************************************************** TS05204
         GBLA  &EXNUM                                           TS05204
EXNUMNAM EQU   &EXNUM                                           TS05204
EXNAMTBL DS    0D                       TBL FOR EXCEPTED NAMES  TS05204
.EXNTBL1 DS    A,H,XL2,A                  PSEUDO-PDE            TS05204
&EXNUM   SETA  &EXNUM-1                                         TS05204
         AIF   (&EXNUM GT 0).EXNTBL1                            TS05204
         MEND                                                   TS05204
         EJECT
**********************************************************************
***                                                                ***
***   PROLOG                                                       ***
***                                                                ***
**********************************************************************
         PRINT NOGEN
FREEALL  LINKSAVE  BASE=12,GETMAIN=YES,GETAMT=WORKDLEN
         USING WORKD,R13
         USING PARMPDL,R9               ADDRESSABILITY OF PRM DESC LST
         EQ$R
*
         ST    R1,CPPLPTR               SAVE THE CPPL POINTER
         XC    COMPCODE,COMPCODE        CLEAR THE COMPLETION CODE
         XC    RETCDE,RETCDE            CLEAR THE INTERNAL RETURN CODE
         MVI   SWITCH1,B'00000000'      INITIALIZE SWITCHES
         B     MAINLINE                 BRANCH TO MAINLINE ROUTINE
         EJECT
FREEALL  TITLE 'FREEALL - MAINLINE ROUTINE'                        JRB
**********************************************************************
***                                                                ***
***   MAINLINE ROUTINE                                             ***
***                                                                ***
**********************************************************************
*
MAINLINE MVC   TUI(TUILEN),TUA          INITIALIZE INFO RETRIEVAL BLKS
         GTEDASET TUI,CPPLPTR=CPPLPTR   LINK BLOCKS TOGETHER
         MVC   TUU(TUULEN),TUB          INITIALIZE UNALLOCATION BLOCKS
         GTEDASET TUU,CPPLPTR=CPPLPTR   LINK BLOCKS TOGETHER
*
         BAL   R10,PPLSETUP             SET UP PARSE PARM LIST
         BAL   R10,PARSE                PARSE THE INPUT PARAMETERS
*
         BAL   R10,IEXCEPTS             INITIALIZE NAME EXCEPTION TABLE
*
         CLC   KSYSMASK,H1              IF 'SYSMASKS' OPERAND IS IN USE
         BNE   MINFOINI                 THEN
         BAL   R10,SYSMASKS               PRINT LIST OF DEFAULT MASKS
         B     END00                      AND GO TO ENDING
*
MINFOINI XC    RELNO,RELNO              INITIALIZE RELATIVE ALLOC NBR.
MINFO    BAL   R10,INFO                 GET INFO ABOUT NEXT DATASET
         L     R4,RETCDE                RETURN CODE TO R4
         B     *+4(R4)                    GO TO:
         B     MINFO                        00 - PROCESS NEXT DSN
         B     END00                        04 - END OF DATASETS
         B     MINFOINI                     08 - START OVER FROM TOP
         B     END0C                        0C - ERROR RETURN
         EJECT
**********************************************************************
***                                                                ***
***   ENDING                                                       ***
***                                                                ***
**********************************************************************
END00    BAL   R10,FOOTNOTE             WRITE FOOTNOTE
         XR    R15,R15                  R15 = 00
         ST    R15,COMPCODE             SAVE IT
         B     ENDING                   BRANCH TO ENDING
*
END0C    BAL   R10,FOOTNOTE             WRITE FOOTNOTE
         LA    R15,X'0C'                R15 = 0C
         ST    R15,COMPCODE             SAVE IT
         B     ENDING                   BRANCH TO ENDING
*
ENDING   LA       R4,MYPPL+(PPLANS-PPL)   ADDRESS OF PTR TO PDL
         L        R4,0(0,R4)              R4 POINTS TO PDL
         IKJRLSA  (R4)                    FREE STORAGE OF PDL
         LINKBACK RCADDR=COMPCODE
         EJECT
**********************************************************************
***                                                                ***
***        CREATE PARSE PARAMETER LIST                             ***
***                                                                ***
**********************************************************************
PPLSETUP ST    R10,PPR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         L     R4,CPPLPTR               ADDRESS OF CMD PROC PARM LIST
         USING CPPL,R4                    ADDRESSABILITY
         MVC   MYPPL+(PPLUPT-PPL)(4),CPPLUPT              UPT  (CPPL)
         MVC   MYPPL+(PPLECT-PPL)(4),CPPLECT              ECT  (CPPL)
         LA    R5,MYECB
         ST    R5,MYPPL+(PPLECB-PPL)                      ECB  (MINE)
         MVC   MYPPL+(PPLPCL-PPL)(4),VPARMPCL             PCL  (CSECT)
         LA    R5,MYANS
         ST    R5,MYPPL+(PPLANS-PPL)                      ANS  (MINE)
         MVC   MYPPL+(PPLCBUF-PPL)(4),CPPLCBUF            CBUF (CPPL)
         XC    MYPPL+(PPLUWA-PPL)(4),MYPPL+(PPLUWA-PPL)   UWA  (MINE)
         DROP  R4
*
PPEND    L     R10,PPR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    PARSE THE INPUT PARAMETER STRING                            ***
***                                                                ***
**********************************************************************
PARSE    ST    R10,PAR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         XC    MYECB,MYECB              ZERO THE ECB FOR PARSE
PARSEIT  CALLTSSR EP=IKJPARS,MF=(E,MYPPL)  PARSE THE PARMS
         L     R9,MYPPL+(PPLANS-PPL)    POINTER TO PDL ADDRESS
         L     R9,0(0,R9)               ADDRESSABILITY OF PDL
*
PAEND    L     R10,PAR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***   INITIALIZE LIST OF BLOCKS RELATING TO EXCEPTION DDNAMES.     ***
***   THESE BLOCKS LOOK LIKE PDE'S, AND IF THE 'EXCEPT' KEYWORD    ***
***   IS USED, WILL BE CHAINED AHEAD OF THE IKJIDENT PDE'S WHICH   ***
***   REFER TO DDNAMES ENTERED AS SUBPARAMETERS.                   ***
***                                                                ***
**********************************************************************
IEXCEPTS ST    R10,IER10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         LA    R4,EXNAMES               R4 POINTS TO LIST OF LEN+NAMES
         LA    R5,EXNAMTBL              R5 IS ADDRESS OF PSEUDO-PDE'S
         LA    R2,EXNUMNAM              R2 HAS NUMBER OF NAMES
IELOOP   ST    R4,0(0,R5)               ADDR OF NAME TO EXNAMTBL ENTRY
         MVC   4(2,R5),8(R4)            LGTH OF NAME TO EXNAMTBL ENTRY
         MVC   6(2,R5),X8000            FLAGS+RESERVED TO EXNAMTBL NTRY
         LA    R4,10(0,R4)              R4 POINTS TO NEXT NAME+LENGTH
         LR    R3,R5                    R3 POINTS TO CURR EXNAMTBL NTRY
         LA    R5,12(0,R5)              R5 POINTS TO NEXT EXNAMTBL NTRY
         ST    R5,8(0,R3)               ADDR OF NEXT NTRY TO CURR NTRY
         BCT   R2,IELOOP                IF NOT DONE, LOOP BACK UP
*
         MVC   8(4,R3),FF000000         MARK END OF LIST FOR NOW
*
         CLC   KEXCEPT,H1               IF 'EXCEPT' KEYWORD NOT IN USE
         BNE   IEEND                      BRANCH TO ENDING
*
         LA    R4,SBEXMASK              R4 HAS ADDR OF MASK PDE CHAIN
         ST    R4,8(0,R3)               CHAIN TO EXNAMTBL
*
IEEND    L     R10,IER10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***  GIVE A LISTING OF THE DEFAULT DDNAME MASKS IN TABLE EXNAMES.  ***
***                                                                ***
**********************************************************************
SYSMASKS ST    R10,SYR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         TPUT  SYSM1,72                 WRITE HEADING
         TPUT  BLANKS,72                WRITE BLANK LINE
*
         LA    R4,EXNUMNAM(0,0)         R4 HAS NUMBER OF NAMES
         LA    R5,EXNAMES-10            R5 POINTS TO -1 ENTRY
SYLOOP   LA    R5,10(0,R5)              INCR POINTER
         MVC   RPTLINE(80),BLANKS       CLEAR REPORT LINE
         MVC   RPTLINE+2(8),0(R5)       MOVE DDNAME TO REPORT LINE
         TPUT  RPTLINE,72               WRITE REPORT LINE
         BCT   R4,SYLOOP                IF NAMES REMAIN, LOOP BACK UP
*
         TPUT  BLANKS,72                TRAILING BLANK LINE
*
SYEND    L     R10,SYR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***      SVC99 INFO RETRIEVAL, THEN PERFORM DDNAME UNALLOCATION,   ***
***      IF APPROPRIATE.                                           ***
***                                                                ***
**********************************************************************
INFO     ST    R10,INR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         LH    R4,RELNO                   GET LAST ALLOC NUMBER
         LA    R4,1(0,R4)                   INCR BY 1
         MVC   TUITU(TUIRBP-TUITU),TUATU  INITIALIZE INFO TEXT UNITS
         STCM  R4,3,TUIRELNO              ALLOC NUMBER TO TEXT UNIT
         STH   R4,RELNO                   ALSO SAVE IT IN STORAGE
         GTEDAALC TUI,VERB=IN,ERRMSG=YES  GET INFO ABOUT ALLOCATION
         CLC   TUIS99RC(4),F0             IF RETURN NOT ZERO
         BNE   INRET0C                      ABORT INFORMATION LOOP
*
INCKUSE  TM    TUIRTATT,X'40'           IF IN USE
         BO    INNEXT                     SKIP THIS DSN
*                                                                  JRB
INCKONLY TM    SBONPFX+6,X'80'     USER SPECIFY KEYWORD "ONLY?"    JRB
         BZ    INSWINIT            B IF NOT.                       JRB
         CLC   =H'0',TUIINDDN-2    DDNAME LENGTH ZERO              JRB
         BE    INNEXT              B IF YES.  IGNORE.              JRB
         CLC   TUIINDDN-2(2),SBONPFX+4 LEN OF DDNAME < PREFIX?     JRB
         BL    INSWINIT            B IF YES.                       JRB
         L     R15,SBONPFX         POINT TO "ONLY" PREFIX.         JRB
         LH    R4,SBONPFX+4        LOAD LENGTH OF PREFIX.          JRB
         BCTR  R4,0                ADJUST FOR SS LENGTH FIELD.     JRB
         EX    R4,COMPONLY         COMPARE PREFIX TO DDNAME.       JRB
*        CLC   TUIINDDN(*-*),0(R15) *** EXECUTED ***               JRB
         BE    INCKCAT             FREE DDNAME IF PREFIX MATCHES,  JRB
         B     INNEXT              ... SKIP DDNAME IF IT DOESN'T.  JRB
*                                                               TS05203
INSWINIT MVI   TYPESW,X'00'             INITIALIZE SWITCHES     TS05203
*                                                               TS05203
INCKNOE  CLC   =H'3',KSCOPE        IS SCOPE "NOEXCEPTIONS?"        JRB
         BNE   INCKDUMY            B IF NOT                        JRB
         MVC   KCONCAT,H1          FORCE FREE CONCATENATION SW.    JRB
         B     INCKCAT             GO FREE DATASET.                JRB
INCKDUMY TM    TUIRTTYP,X'80'           IF DUMMY DATASET        TS05203
         BNO   INCKTERM                 THEN                    TS05203
         MVI   TYPESW,X'10'               SET TYPE SWITCH       TS05203
         CLC   KDUMMY(2),H2               IF NODUMMY OPERAND    TS05203
         BE    INNEXT                       SKIP THIS DSN       TS05203
         B     INCKDYNA                   ELSE CONTINUE CHECKS  TS05203
*                                       ELSE                    TS05203
INCKTERM TM    TUIRTTYP,X'40'           IF TERMINAL DATASET     TS05203
         BNO   INCKSYSO                 THEN                    TS05203
         MVI   TYPESW,X'18'               SET TYPE SWITCH       TS05203
         CLC   KTERM(2),H2                IF NOTERM OPERAND     TS05203
         BE    INNEXT                       SKIP THIS DSN       TS05203
         B     INCKDYNA                   ELSE CONTINUE CHECKS  TS05203
*                                       ELSE                    TS05203
INCKSYSO TM    TUIRTTYP,X'10'           IF SYSOUT DATASET       TS05203
         BNO   INCKSCR                  THEN                    TS05203
         MVI   TYPESW,X'28'               SET TYPE SWITCH       TS05203
         CLC   KSYSOUT(2),H2              IF NOSYSOUT OPERAND   TS05203
         BE    INNEXT                       SKIP THIS DSN       TS05203
         B     INCKDYNA                   ELSE CONTINUE CHECKS  TS05203
*                                       ELSE                    TS05203
INCKSCR  XR    R4,R4                    CLEAR R4 FOR INSERT     TS05203
         ICM   R4,3,TUIINDSN-2          R4 HAS LENGTH OF DSN    TS05203
         CH    R4,H17                   IF LENGTH LT 17         TS05203
         BL    INCKDYNA                   BYPASS THIS CHECK     TS05203
         MVC   DSN17(17),TUIINDSN       MOVE FIRST 17 CHARACTRS TS05203
         NC    DSN17(17),DSNNCM         KILL NUMERIC BITS       TS05203
         CLC   DSN17(17),DSNTMASK       IF=C'SYS00000.T000000.' TS05203
         BNE   INCKDYNA                 THEN                    TS05203
         MVI   TYPESW,X'20'               SET TYPE SWITCH       TS05203
         CLC   KTEMP(2),H2                IF NOTEMP OPERAND     TS05203
         BE    INNEXT                       SKIP THIS DSN       TS05203
         B     INCKDYNA                   ELSE CONTINUE CHECKS  TS05203
*
         EJECT                                                  TS05203
INCKDYNA TM    TUIRTATT,X'08'           IF NOT DYNAMICALLY ALLOCATED
         BO    INCKDDN                  THEN
         CLC   KSCOPE(2),H1               IF 'DYNAM' KEYWORD IN USE
         BE    INNEXT                       SKIP THIS DSN
*
INCKDDN  BAL   R10,EXCEPT               CHECK DDNAME FOR EXCEPTION
         CLC   RETCDE,F0                IF RETURN NOT 00
         BNE   INNEXT                     SKIP THIS DSN
*
INCKCAT  TM    TUIRTATT,X'80'           IF A MEMBER OF A CONCATENATION
         BNO   INUNALC                  THEN
         CLC   KCONCAT,H1                 IF 'CONCAT' KEYWORD IN USE
         BNE   INCKCAT1                   THEN
         MVI   TYPESW,X'08'                 SET TYPE SWITCH     TS05203
         BAL   R10,DECONCAT                 DECONCATENATE
         CLC   RETCDE,F0                      IF RC NOT 00
         BNE   INNEXT                         THEN SKIP THIS DSN
         B     INRET08                      RETURN, START CHAIN OVER
INCKCAT1 B     INNEXT                   ELSE SKIP THIS DSN
*
INUNALC  MVC   TUUTU(TUURBP-TUUTU),TUBTU  INIT TEXT UNITS FROM PROTO
         MVC   TUUDDNAM-2(10),TUIINDDN-2  INIT DDNAME FROM INFO
         GTEDAALC TUU,VERB=UN,ERRMSG=YES  UNALLOCATE THE DDNAME
*
         CLC   TUUS99RC(4),F0           IF RETURN NOT ZERO
         BNE   INNEXT                     GO TO PROCESS NEXT DSN
         BAL   R10,REPORT               ELSE PERFORM REPORT
         LH    R4,RELNO                   LOAD COUNTER TO R4
         BCTR  R4,0                       DECR BY 1
         STH   R4,RELNO                   SAVE IT AGAIN
*
INNEXT   TM    TUIRTLST,X'80'           IF LAST ENTRY
         BO    INRET04                    BRANCH TO RETURN=04
         B     INRET00                  ELSE BRANCH TO RETURN=00
*
INRET00  LA    R15,X'00'                INDICATE LOOK FOR NEXT DSN
         ST    R15,RETCDE               SAVE IT INTO RETCDE
         B     INEND                    GO TO ENDING
*
INRET04  LA    R15,X'04'                INDICATE LAST ENTRY
         ST    R15,RETCDE               SAVE IT INTO RETCDE
         B     INEND                    GO TO ENDING
*
INRET08  LA    R15,X'08'                INDICATE DECONCAT AND RESTART
         ST    R15,RETCDE               SAVE IT INTO RETCDE
         B     INEND                    GO TO ENDING
*
INRET0C  LA    R15,X'0C'                INDICATE INFORMATION ERROR
         ST    R15,RETCDE               SAVE IT INTO RETCDE
         B     INEND                    GO TO ENDING
*
INEND    L     R10,INR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    CHECK FOR EXCEPTIONS TO DDNAMES TO BE FREED                 ***
***                                                                ***
**********************************************************************
EXCEPT   ST    R10,EXR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         XR    R4,R4                    CLEAR R4 FOR INSERT
         ICM   R4,3,TUIINDDN-2          R4 HAS LEN OF DDNAME
         LTR   R4,R4                    IF LENGTH ZERO
         BZ    EXRET04                    RETURN = 04
         BCTR  R4,0                     R4 MINUS 1 FOR EXEC
         MVC   EXDDN(8),BLANKS          CLEAR THE WORK FIELD
         B     *+10                     BRANCH AROUND MOVE
         MVC   EXDDN(0),TUIINDDN          MOVE DDNAME TO WORK
         EX    R4,*-6                   EXECUTE THE MOVE
*
         LA    R3,EXNAMTBL              ADDRESS OF PSEUDO-PDE'S
         USING EXPDE,R3                 ADDRESSABILITY
         B     EXLOOP1A                 BRANCH INTO LOOP
*
EXLOOP1  CLC   EXNEXT,FF000000          IF END OF CHAIN
         BE    EXEND                      RETURN
         CLC   EXNEXT,F0                ELSE IF NO SUBFIELD
         BE    EXEND                      RETURN
         L     R3,EXNEXT                POINT TO NEXT PSEUDO-PDE
*
EXLOOP1A L     R4,EXADDR                R4 POINTS TO DDN MASK
         BCTR  R4,0                       MINUS 1 FOR LOOP
         LH    R5,EXLEN                 R5 IS LENGTH OF MASK
         LA    R6,EXDDN-1               R6 POINTS TO WORK DDN MINUS 1
*
EXLOOP2  LA    R6,1(0,R6)               POINT TO NEXT WORK DDN CHAR
         LA    R4,1(0,R4)               POINT TO NEXT MASK CHAR
         CLI   0(R4),C'-'               IF MASK CHAR IS HYPHEN
         BE    EXMATCH                    TREAT AS MATCH
         CLI   0(R6),X'40'              IF WORK CHAR BLANK
         BE    EXNOMTCH                   LEAVE THE LOOP
         CLI   0(R4),C'*'               IF MASK CHAR IS ASTERISK,
         BE    EXLOOP2N                   STAY IN LOOP
         CLC   0(1,R4),0(R6)            IF CHARS DON'T MATCH
         BNE   EXNOMTCH                   LEAVE THE LOOP
EXLOOP2N BCT   R5,EXLOOP2               MATCH SO FAR, LOOP BACK UP
*                       ***FALL OUT OF LOOP ***
         CLC   TUIINDDN-2(2),EXLEN      IF DDNAME LEN GT MASK LEN
         BH    EXNOMTCH                   NO MATCH AT END OF LOOP
EXMATCH  B     EXRET04                  ALL CHARS MATCH, RETURN = 04
*
EXNOMTCH B     EXLOOP1                  MISMATCH, STAY IN OUTER LOOP
*
EXRET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     EXEND                    BRANCH TO ENDING
*
EXEND    L     R10,EXR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    UNALLOCATE A CONCATENATION.  IF UNALLOCATION IS SUCCESSFUL, ***
***    THE FILE RELATIVE NUMBERS MAY CHANGE UNPREDICTABLY.         ***
***    THEREFORE, THE RETURN CODE OF 4 WILL CAUSE AN EVENTUAL      ***
***    RETURN CODE TO THE MAINLINE PROCEDURE WHICH WILL INDICATE   ***
***    THAT THE RELATIVE NUMBER OF THE FILES SHOULD BE RESET TO    ***
***    ONE, AND THE PROCESS OF OBTAINING INFORMATION SHOULD BE     ***
***    BEGUN AGAIN FROM THE TOP.                                   ***
***                                                                ***
**********************************************************************
DECONCAT ST    R10,DER10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         MVC   TUUTU(TUURBP-TUUTU),TUBTU  INIT TEXT UNITS FROM PROTO
         MVC   TUUDDNAM-2(10),TUIINDDN-2  MOVE DDNAME INTO CNTRL BLOCK
         GTEDAALC TUU,VERB=UN,ERRMSG=YES  DECONCATENATE
         CLC   TUUS99RC(4),F0             IF RETURN CODE NOT ZERO
         BNE   DERET04                      RETURN = 04
*
         OI    SWITCH1,X'40'            INDICATE CONCATENATION FREED
         BAL   R10,REPORT               WRITE A MESSAGE
         B     DEEND                    RETURN = 00
*
DERET04  LA    R15,X'04'                RETURN CODE TO R15
         ST    R15,RETCDE               SAVE IT
         B     DEEND                    BRANCH TO ENDING
*
DEEND    L     R10,DER10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    CREATE ONE LINE OF A LISTING OF FREED DDNAMES/DSNAMES       ***
***                                                                ***
**********************************************************************
REPORT   ST    R10,RER10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         CLC   KLIST,H1                 IF 'LIST' OPERAND NOT IN USE
         BNE   REEND                      BYPASS THIS WHOLE PROCEDURE
*
         TM    SWITCH1,X'80'            IF HEADING ALREADY PRINTED
         BO    REBODY                     SKIP WRITING HEADING
         TPUT  BLANKS,1                 WRITE BLANK LINE
         LA    R4,HDG1                  POINT TO HEADING
         LA    R5,L'HDG1                LENGTH OF HEADING
         TPUT  (R4),(R5)                  WRITE THE HEADING
         TPUT  BLANKS,1                 WRITE BLANK LINE
         OI    SWITCH1,X'80'            SET HEADING-PRINTED SWITCH
*
REBODY   MVC   RPTLINE(80),BLANKS       INITIALIZE REPORT LINE
         XR    R4,R4                    CLEAR R4 FOR INSERT
         ICM   R4,3,TUIINDDN-2          LENGTH OF DDNAME TO R4
         BCTR  R4,0                       MINUS 1 FOR EXEC
         B     *+10                     BRANCH AROUND MOVE
         MVC   RPTLINE+2(0),TUIINDDN      MOVE DDNAME TO REPORT
         EX    R4,*-6                   PERFORM THE MOVE
*                                                               TS05203
         XR    R4,R4                    CLEAR R4 FOR INSERT     TS05203
         IC    R4,TYPESW                OFFSET INTO TYPETABL    TS05203
         LA    R4,TYPETABL(R4)          ADDR OF TYPE LITERAL    TS05203
         MVC   RPTLINE+12(8),0(R4)      MOVE TYPE TO REPORT     TS05203
*
         XR    R4,R4                    CLEAR R4 FOR INSERT
         ICM   R4,3,TUIINDSN-2          LENGTH OF DSNAME TO R4
         BCTR  R4,0                       MINUS 1 FOR EXEC
         B     *+10                     BRANCH AROUND MOVE
         MVC   RPTLINE+22(0),TUIINDSN     MOVE DSNAME TO REPORT TS05203
         EX    R4,*-6                   PERFORM THE MOVE
*
*        TM    SWITCH1,X'40'     IF A CONCATENATION WAS FREED   TS05203
*        BNO   *+12              THEN                           TS05203
*        MVI   RPTLINE,C'*'        PUT AN '*' ON THE PRINT LINE TS05203
*        OI    SWITCH1,X'20'       REMEMBER FOOTNOTE            TS05203
*        NI    SWITCH1,X'BF'       TURN OFF CONCAT-FREED SWITCH TS05203
*
         LA    R4,RPTLINE               POINT TO REPORT LINE
         LA    R5,80(0,0)               LENGTH OF LINE
         TPUT  (R4),(R5)                WRITE THE REPORT LINE
*
         B     REEND
*
REEND    L     R10,RER10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***   WRITE THE FOOTNOTE                                           ***
***                                                                ***
**********************************************************************
FOOTNOTE ST    R10,FOR10SAV             SAVE RETURN ADDRESS
         XC    RETCDE,RETCDE            SET ERROR CODE TO ZERO
*
         CLC   KLIST,H1                 IF 'LIST' OPERAND NOT IN USE
         BNE   FOEND                      BYPASS THIS WHOLE PROCEDURE
*
         TM    SWITCH1,X'80'            IF HEADING NOT WRITTEN
         BNO   FOEND                      SKIP ALL
         TM    SWITCH1,X'20'            IF A CONCATENATION NOT FREED
         BNO   FOBLANK                    SKIP FOOTNOTE #1 AND #2
*        TPUT  FOOT1,72                 WRITE FOOTNOTE #1       TS05203
*        TPUT  FOOT2,72                 WRITE FOOTNOTE #2       TS05203
*
FOBLANK  TPUT  BLANKS,72                POINT TO BLANK LINE
*
FOEND    L     R10,FOR10SAV             RESTORE RETURN ADDRESS
         BR    R10                      RETURN
         EJECT
**********************************************************************
***                                                                ***
***    DATA CONSTANTS                                              ***
***                                                                ***
**********************************************************************
DATACNST DS    0D
VPARMPCL DC    V(PARMPCL)               ADDR OF PARM CONTROL LIST
F0       DC    F'0'                     CONSTANT
H1       DC    H'1'                     CONSTANT
H2       DC    H'2'                     CONSTANT                TS05203
H17      DC    H'17'                    CONSTANT                TS05203
COMPONLY CLC   TUIINDDN(*-*),0(R15) *** EXECUTED ***               JRB
DSNNCM   DC    X'FFFFFFF0F0F0F0F0FFFFF0F0F0F0F0F0FF'            TS05203
*                S Y S # # # # # . T # # # # # # .              TS05203
DSNTMASK DC    CL17'SYS00000.T000000.'  FORMAT OF TEMP DSN (17) TS05203
TYPETABL DS    0D                                               TS05203
         DC    CL8'Dataset'             LITERAL                 TS05203
         DC    CL8'Concat.'             LITERAL                 TS05203
         DC    CL8'Dummy'               LITERAL                 TS05203
         DC    CL8'Terminal'            LITERAL                 TS05203
         DC    CL8'Temp.'               LITERAL                 TS05203
         DC    CL8'Sysout'              LITERAL                 TS05203
*                                                               TS05203
BLANKS   DC    CL80' '                  LITERAL
HDG1     DC    CL72'The following files have been freed:'
SYSM1    DC    CL72'Installation defined masks in use are:'
*   FOOT1    DC    CL72'_____________________________'          TS05203
*   FOOT2    DC    CL72'* Indicates a concatenation'            TS05203
*
*                                                               TS05204
         PUSH  PRINT                                            TS05204
         PRINT GEN                                              TS05204
*    +-----------------------------------------+                TS05204
*    |                                         |
*    |  SEE THE HELP DOCUMENT FOR INSTRUCTIONS |
*    |  ON HOW TO CONSTRUCT THESE MASKS.       |
*    |                                         |
*    +-----------------------------------------+
*                                                               TS05204
         EXNAM  $$$$-                   STEPLIB COMMAND LIBRARY    JRB
         EXNAM  ISP-                    ISPF FILES              TS05204
         EXNAM  IPCS-                   IPCS FILES                 JRB
         EXNAM  LOADLIB-                PSEUDO STEPLIB FOR $$      JRB
         EXNAM  SMPTABL                 SMP DIALOG TABLES          JRB
         EXNAM  STEPLIB                 STEPLIB DATASET            JRB
         EXNAM  SYSEXEC                 TSO REXX LIBRARY           JRB
         EXNAM  SYSPROC                 TSO CLISTS              TS05204
         EXNAM  SYSLBC                  BRODCAST DATASET           JRB
         EXNAM  SYSHELP                 TSO HELP                TS05204
         EXNAM  SYSIN                   UTILITY INPUT           TS05204
         EXNAM  SYSPRINT                UTILITY OUTPUT          TS05204
         EXNAM  SYSUADS                 USER ATTRIB DATASET        JRB
         EXNAM  FT05F001                FORTRAN INPUT           TS05201
         EXNAM  FT06F001                FORTRAN OUTPUT          TS05201
*        EXNAM  PANDD*                  PANVALET FILES          TS05204
         POP    PRINT                                           TS05204
*
*
FF000000 DC    XL4'FF000000'
X8000    DC    XL2'8000'
*                                       CHANGE MACRO, BELOW:    TS05203
TUA      GTEDADAT  RELNO=X,RTLST=X,INDDN=X,INDSN=X,RTATT=X,            X
               RTTYP=X                                          TS05203
TUB      GTEDADAT  DDNAM=X,UNALC=X
         EJECT
**********************************************************************
***                                                                ***
***    COMMAND OPERANDS                                            ***
***                                                                ***
***  SYNTAX:                                                       ***
***                                                                ***
***  FREEALL  EXCEPT(MASK1,MASK2,...)                           TS05203
***           ONLY(PREFIX)                                         JRB
***           SYSMASKS                                          TS05203
***           NOLIST | LIST                                     TS05203
***           CONCATS | NOCONCATS                               TS05203
***           DYNAM | ALL | NOEXCEPTIONS                  TS05203  JRB
***           TEMP | NOTEMP  (OR  SCRATCH | NOSCRATCH)          TS05203
***           DUMMY | NODUMMY                                   TS05203
***           SYSOUT | NOSYSOUT                                 TS05203
***           TERM | NOTERM                                     TS05203
***                                                                ***
***  REQUIRED OPERANDS:  NONE                                   TS05203
***   DEFAULT OPERANDS:  NOLIST,CONCATS,DYNAM,TEMP,             TS05203
***                      DUMMY,SYSOUT,TERM                      TS05203
**********************************************************************
PARMPCL  IKJPARM  DSECT=PARMPDL
*
KLIST    IKJKEYWD DEFAULT='NOLIST'
         IKJNAME 'LIST'
         IKJNAME 'NOLIST'
*
KSCOPE   IKJKEYWD DEFAULT='DYNAM'
         IKJNAME 'DYNAM'
         IKJNAME 'ALL'
         IKJNAME 'NOEXCEPTIONS'                                    JRB
*
KCONCAT  IKJKEYWD DEFAULT='CONCATS'
         IKJNAME 'CONCATS'
         IKJNAME 'NOCONCATS'
*
KONLY    IKJKEYWD ,                                                JRB
         IKJNAME 'ONLY',SUBFLD=SBONLY                              JRB
*                                                                  JRB
KEXCEPT  IKJKEYWD
         IKJNAME 'EXCEPT',SUBFLD=SBEXCEPT
*
KSYSMASK IKJKEYWD
         IKJNAME 'SYSMASKS'
*                                                               TS05203
*     ----  OPERANDS FOR COMPATABILITY WITH J/TIP ---           TS05203
KTEMP    IKJKEYWD DEFAULT='TEMP'                                TS05203
         IKJNAME 'TEMP',ALIAS=('SCRATCH')                       TS05203
         IKJNAME 'NOTEMP',ALIAS=('NOSCRATCH')                   TS05203
*                                                               TS05203
KTERM    IKJKEYWD DEFAULT='TERM'                                TS05203
         IKJNAME 'TERM'                                         TS05203
         IKJNAME 'NOTERM'                                       TS05203
*                                                               TS05203
KDUMMY   IKJKEYWD DEFAULT='DUMMY'                               TS05203
         IKJNAME 'DUMMY'                                        TS05203
         IKJNAME 'NODUMMY'                                      TS05203
*                                                               TS05203
KSYSIN   IKJKEYWD DEFAULT='SYSIN'                               TS05203
         IKJNAME 'SYSIN'                                        TS05203
         IKJNAME 'NOSYSIN'                                      TS05203
*                                                               TS05203
KSYSOUT  IKJKEYWD DEFAULT='SYSOUT'                              TS05203
         IKJNAME 'SYSOUT'                                       TS05203
         IKJNAME 'NOSYSOUT'                                     TS05203
*
SBONLY   IKJSUBF ,                                                 JRB
SBONPFX  IKJIDENT 'FILE/DD NAME OR PREFIX',                        JRB +
               UPPERCASE,MAXLNTH=8,                                JRB +
               FIRST=ANY,OTHER=ANY,                                JRB +
               PROMPT='FILE/DD NAME OR PREFIX',                    JRB +
               HELP=('1-8 CHARACTER FILE NAME (DDNAME) OR PREFIX.')
*                                                                  JRB
SBEXCEPT IKJSUBF
SBEXMASK IKJIDENT 'FILE/DD NAME OR MASK',LIST,                         X
               UPPERCASE,MAXLNTH=8,                                    X
               FIRST=ANY,OTHER=ANY,                                    X
               PROMPT='FILE/DD NAME OR MASK',                          X
               HELP=('1-8 CHARACTER FILE NAME (DDNAME) OR MASK')
*
         IKJENDP
         EJECT
**********************************************************************
***                                                                ***
***    WORK DATA AREA, POINTED TO BY R13                           ***
***                                                                ***
**********************************************************************
WORKD    DSECT
MYSAVE   DS    18F                      MY SAVE AREA
COMPCODE DS    F                        PROGRAM COMPLETION CODE
CPPLPTR  DS    F                        POINTER TO CPPL
RETCDE   DS    F                        INTERNAL RETURN CODE
INR10SAV DS    F                        RETURN ADDRESS SAVE AREA
EXR10SAV DS    F                        RETURN ADDRESS SAVE AREA
IER10SAV DS    F                        RETURN ADDRESS SAVE AREA
SYR10SAV DS    F                        RETURN ADDRESS SAVE AREA
DER10SAV DS    F                        RETURN ADDRESS SAVE AREA
FOR10SAV DS    F                        RETURN ADDRESS SAVE AREA
PAR10SAV DS    F                        RETURN ADDRESS SAVE AREA
PPR10SAV DS    F                        RETURN ADDRESS SAVE AREA
RER10SAV DS    F                        RETURN ADDRESS SAVE AREA
RELNO    DS    H                        RELATIVE NUMBER OF ALLOCATION
RPTLINE  DS    CL80                     REPORT LINE
MYPPL    DS    7F                       PARSE PARAMETER LIST
MYECB    DS    F                        ECB FOR PARSE
MYANS    DS    F                        POINTER TO THE PDL
DSN17    DS    CL17                     WORK AREA FOR TEMP DSN  TS05203
SWITCH1  DS    B'00000000'              SWITCHES
*                1.......                X'80' - HEADING LINE PRINTED
*                .1......                X'40' - CONCATENATION IS FREED
*                ..1.....                X'20' - CONCAT WAS FREED ONCE
*                ...11111                UNUSED
TYPESW   DS    XL1                      INDICATE FILE TYPE      TS05203
*                                         X'00' - NOT SPECIAL   TS05203
*                                         X'08' - CONCATENATION TS05203
*                                         X'10' - DUMMY FILE    TS05203
*                                         X'18' - TERMINAL FILE TS05203
*                                         X'20' - TEMP FILE     TS05203
*                                         X'28' - SYSOUT FILE   TS05203
EXDDN    DS    CL8                      WORK AREA FOR DDNAME
*
*
         PUSH  PRINT                                            TS05204
         PRINT GEN                                              TS05204
*    +-----------------------------------------+                TS05204
*    |  TABLE OF PSEUDO-PDE'S FOR INSTALLATION |                TS05204
*    |  EXCEPTED DDNAMES OR MASKS.             |                TS05204
*    +-----------------------------------------+                TS05204
         EXTBL                                                  TS05204
         POP   PRINT                                            TS05204
*                                                               TS05204
*                                                               TS05204
*                                                               TS05204
*                                                               TS05204
*                                                               TS05204
*
         PUSH  PRINT                                            TS05203
         PRINT GEN                                              TS05203
         EJECT                                                  TS05203
*                                       CHANGE MACRO, BELOW:    TS05203
TUI      GTEDADAT  MAP=ONLY,RELNO=X,RTLST=X,INDDN=X,INDSN=X,RTATT=X,   X
               RTTYP=X                                          TS05203
         EJECT                                                  TS05203
TUU      GTEDADAT  MAP=ONLY,DDNAM=X,UNALC=X
         POP   PRINT                                            TS05203
*
         DS    0D                       ALIGN FOR GETMAIN
WORKDLEN EQU   *-WORKD                  LENGTH OF AREA
         EJECT
**********************************************************************
***                                                                ***
***    MAPPING DSECTS                                              ***
***                                                                ***
**********************************************************************
         PRINT NOGEN
         IEFZB4D0
         IKJEFFDF DFDSECT=YES,DFDSEC2=YES
         IKJCPPL                        COMMAND PROCESSOR PARM LIST
         IKJPPL                         PARSE PARM LIST
*
EXPDE    DSECT                          PDE FOR LIST OF DDNAME MASKS
EXADDR   DS    F                          ADDRESS OF MASK
EXLEN    DS    H                          LENGTH OF MASK
EXFLAGS  DS    BL1                        FLAGS X'80'
         DS    XL1                        NOT USED X'00'
EXNEXT   DS    F                          ADDR OF NEXT PDE
*
         CVT   DSECT=YES              , CVTMAP FOR IKJPARS
         END
